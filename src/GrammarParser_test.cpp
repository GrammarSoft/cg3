/* Generated by re2c 0.10.6 on Sun Oct 29 14:58:53 2006 */
/*
 * Copyright (C) 2006, GrammarSoft Aps
 * and the VISL project at the University of Southern Denmark.
 * All Rights Reserved.
 *
 * The contents of this file are subject to the GrammarSoft Public
 * License Version 1.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.grammarsoft.com/GSPL or
 * http://visl.sdu.dk/GSPL.txt
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 */

#include "stdafx.h"
#include "Strings.h"
#include <unicode/uregex.h>
#include "GrammarParser.h"
#include "Grammar.h"
#include "uextras.h"
#include <sys/stat.h>

using namespace CG3;
using namespace CG3::Strings;



#define YYCURSOR        input

YYCTYPE *GrammarParser::re2c_skipline(YYCTYPE *input) {
skipline_start:

{
	YYCTYPE yych;

	yych = *YYCURSOR;
	if(yych <= 0x000C) {
		if(yych <= 0x0009) {
			if(yych >= 0x0001) goto yy6;
		} else {
			if(yych == 0x000B) goto yy6;
			goto yy4;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= 0x0084) goto yy6;
			goto yy4;
		} else {
			if(yych <= 0x2027) goto yy6;
			if(yych <= 0x2029) goto yy4;
			goto yy6;
		}
	}
	++YYCURSOR;
	{goto skipline_end;}
yy4:
	++YYCURSOR;
	{result->lines++; goto skipline_end;}
yy6:
	++YYCURSOR;
	{goto skipline_start;}
}

skipline_end:
	return YYCURSOR;
}

YYCTYPE *GrammarParser::re2c_parseCompositeTag(YYCTYPE *input, Set *set) {
	CG3::CompositeTag *ctag = result->allocateCompositeTag();
	marker = YYCURSOR;

parseCompositeTag_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy16;
			} else {
				if(yych == 0x000A) goto yy12;
				goto yy14;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy12;
				if(yych <= 0x000D) goto yy14;
				goto yy16;
			} else {
				if(yych <= ' ') goto yy14;
				if(yych <= '"') goto yy16;
				goto yy19;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy16;
				if(yych <= '(') goto yy21;
				goto yy23;
			} else {
				if(yych == ';') goto yy25;
				goto yy16;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy18;
				if(yych <= 0x0084) goto yy16;
				goto yy12;
			} else {
				if(yych <= 0x2027) goto yy16;
				if(yych <= 0x2029) goto yy12;
				goto yy16;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 0x001B) {
		if(yych <= 0x000A) {
			if(yych != 0x0009) goto yy28;
		} else {
			if(yych == 0x000C) goto yy28;
			if(yych >= 0x000E) goto yy28;
		}
	} else {
		if(yych <= '\'') {
			if(yych <= ' ') goto yy11;
			if(yych != '#') goto yy28;
		} else {
			if(yych <= ')') goto yy11;
			if(yych != ';') goto yy28;
		}
	}
yy11:
	{goto parseCompositeTag_end;}
yy12:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 0x001B) {
		if(yych <= 0x000A) {
			if(yych != 0x0009) goto yy28;
		} else {
			if(yych == 0x000C) goto yy28;
			if(yych >= 0x000E) goto yy28;
		}
	} else {
		if(yych <= '\'') {
			if(yych <= ' ') goto yy13;
			if(yych != '#') goto yy28;
		} else {
			if(yych <= ')') goto yy13;
			if(yych != ';') goto yy28;
		}
	}
yy13:
	{
		marker = YYCURSOR;
		result->lines++;
		goto parseCompositeTag_start;
		}
yy14:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy32;
yy15:
	{
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy16:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy28;
yy17:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy18:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy27;
		goto yy28;
	} else {
		if(yych <= ')') goto yy27;
		if(yych == ';') goto yy27;
		goto yy28;
	}
yy19:
	++YYCURSOR;
	{
		YYCURSOR = re2c_skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy21:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ( on line %u!\n", result->lines); exit(1);}
yy23:
	++YYCURSOR;
	{goto parseCompositeTag_end;}
yy25:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Found ; before ) on line %u!\n", result->lines); exit(1);}
yy27:
	++YYCURSOR;
	yych = *YYCURSOR;
yy28:
	if(yych <= ' ') {
		if(yych <= 0x000B) {
			if(yych == 0x0009) goto yy17;
			if(yych <= 0x000A) goto yy27;
			goto yy17;
		} else {
			if(yych == 0x000D) goto yy17;
			if(yych <= 0x001B) goto yy27;
			goto yy17;
		}
	} else {
		if(yych <= ')') {
			if(yych == '#') goto yy17;
			if(yych <= '\'') goto yy27;
			goto yy17;
		} else {
			if(yych <= ';') {
				if(yych <= ':') goto yy27;
				goto yy17;
			} else {
				if(yych != '\\') goto yy27;
			}
		}
	}
yy29:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= 0x000C) {
		if(yych <= 0x0009) {
			if(yych <= 0x0008) goto yy27;
			goto yy17;
		} else {
			if(yych == 0x000B) goto yy17;
			goto yy27;
		}
	} else {
		if(yych <= ' ') {
			if(yych <= 0x000D) goto yy17;
			if(yych <= 0x001B) goto yy27;
			goto yy17;
		} else {
			if(yych == '\\') goto yy29;
			goto yy27;
		}
	}
yy31:
	++YYCURSOR;
	yych = *YYCURSOR;
yy32:
	if(yych <= 0x000B) {
		if(yych == 0x0009) goto yy31;
		if(yych <= 0x000A) goto yy15;
		goto yy31;
	} else {
		if(yych <= 0x000D) {
			if(yych <= 0x000C) goto yy15;
			goto yy31;
		} else {
			if(yych <= 0x001B) goto yy15;
			if(yych <= ' ') goto yy31;
			goto yy15;
		}
	}
}


parseCompositeTag_end:
	if (ctag->tags_map.empty()) {
		u_fprintf(ux_stderr, "Error: Empty () on line %u!\n", result->lines);
		exit(1);
	}
	result->addCompositeTagToSet(set, ctag);
	return YYCURSOR;
}

YYCTYPE *GrammarParser::re2c_parseTagList(YYCTYPE *input, Set *set) {
	marker = YYCURSOR;

parseTagList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy41;
			} else {
				if(yych == 0x000A) goto yy37;
				goto yy39;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy37;
				if(yych <= 0x000D) goto yy39;
				goto yy41;
			} else {
				if(yych <= ' ') goto yy39;
				if(yych <= '"') goto yy41;
				goto yy48;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy41;
				if(yych <= '(') goto yy44;
				goto yy46;
			} else {
				if(yych == ';') goto yy50;
				goto yy41;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy43;
				if(yych <= 0x0084) goto yy41;
				goto yy37;
			} else {
				if(yych <= 0x2027) goto yy41;
				if(yych <= 0x2029) goto yy37;
				goto yy41;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 0x001B) {
		if(yych <= 0x000A) {
			if(yych != 0x0009) goto yy53;
		} else {
			if(yych == 0x000C) goto yy53;
			if(yych >= 0x000E) goto yy53;
		}
	} else {
		if(yych <= '\'') {
			if(yych <= ' ') goto yy36;
			if(yych != '#') goto yy53;
		} else {
			if(yych <= ')') goto yy36;
			if(yych != ';') goto yy53;
		}
	}
yy36:
	{goto parseTagList_end;}
yy37:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 0x001B) {
		if(yych <= 0x000A) {
			if(yych != 0x0009) goto yy53;
		} else {
			if(yych == 0x000C) goto yy53;
			if(yych >= 0x000E) goto yy53;
		}
	} else {
		if(yych <= '\'') {
			if(yych <= ' ') goto yy38;
			if(yych != '#') goto yy53;
		} else {
			if(yych <= ')') goto yy38;
			if(yych != ';') goto yy53;
		}
	}
yy38:
	{
		marker = YYCURSOR;
		result->lines++;
		goto parseTagList_start;
		}
yy39:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy57;
yy40:
	{
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy41:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy53;
yy42:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::CompositeTag *ctag = result->allocateCompositeTag();
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		result->addCompositeTagToSet(set, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy43:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy52;
		goto yy53;
	} else {
		if(yych <= ')') goto yy52;
		if(yych == ';') goto yy52;
		goto yy53;
	}
yy44:
	++YYCURSOR;
	{
		YYCURSOR = re2c_parseCompositeTag(YYCURSOR, set);
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy46:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ) on line %u!\n", result->lines); exit(1);}
yy48:
	++YYCURSOR;
	{
		YYCURSOR = re2c_skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy50:
	++YYCURSOR;
	{goto parseTagList_end;}
yy52:
	++YYCURSOR;
	yych = *YYCURSOR;
yy53:
	if(yych <= ' ') {
		if(yych <= 0x000B) {
			if(yych == 0x0009) goto yy42;
			if(yych <= 0x000A) goto yy52;
			goto yy42;
		} else {
			if(yych == 0x000D) goto yy42;
			if(yych <= 0x001B) goto yy52;
			goto yy42;
		}
	} else {
		if(yych <= ')') {
			if(yych == '#') goto yy42;
			if(yych <= '\'') goto yy52;
			goto yy42;
		} else {
			if(yych <= ';') {
				if(yych <= ':') goto yy52;
				goto yy42;
			} else {
				if(yych != '\\') goto yy52;
			}
		}
	}
yy54:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= 0x000C) {
		if(yych <= 0x0009) {
			if(yych <= 0x0008) goto yy52;
			goto yy42;
		} else {
			if(yych == 0x000B) goto yy42;
			goto yy52;
		}
	} else {
		if(yych <= ' ') {
			if(yych <= 0x000D) goto yy42;
			if(yych <= 0x001B) goto yy52;
			goto yy42;
		} else {
			if(yych == '\\') goto yy54;
			goto yy52;
		}
	}
yy56:
	++YYCURSOR;
	yych = *YYCURSOR;
yy57:
	if(yych <= 0x000B) {
		if(yych == 0x0009) goto yy56;
		if(yych <= 0x000A) goto yy40;
		goto yy56;
	} else {
		if(yych <= 0x000D) {
			if(yych <= 0x000C) goto yy40;
			goto yy56;
		} else {
			if(yych <= 0x001B) goto yy40;
			if(yych <= ' ') goto yy56;
			goto yy40;
		}
	}
}


parseTagList_end:
	return YYCURSOR;
}

YYCTYPE *GrammarParser::re2c_parseDelimiters(YYCTYPE *input) {
	CG3::Set *curset = result->allocateSet();
	curset->setName(stringbits[S_DELIMITSET]);
	curset->line = result->lines;

parseDelimiters_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= ':') {
		if(yych <= 0x000B) {
			if(yych <= 0x0000) goto yy60;
			if(yych == 0x000A) goto yy62;
			goto yy70;
		} else {
			if(yych <= 0x000C) goto yy62;
			if(yych == '#') goto yy66;
			goto yy70;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy68;
			if(yych == '=') goto yy64;
			goto yy70;
		} else {
			if(yych <= 0x0085) goto yy62;
			if(yych <= 0x2027) goto yy70;
			if(yych <= 0x2029) goto yy62;
			goto yy70;
		}
	}
yy60:
	++YYCURSOR;
	{goto parseDelimiters_end;}
yy62:
	++YYCURSOR;
	{result->lines++; goto parseDelimiters_start;}
yy64:
	++YYCURSOR;
	{YYCURSOR = re2c_parseTagList(YYCURSOR, curset); goto parseDelimiters_end;}
yy66:
	++YYCURSOR;
	{YYCURSOR = re2c_skipline(YYCURSOR); goto parseDelimiters_start;}
yy68:
	++YYCURSOR;
	{goto parseDelimiters_end;}
yy70:
	++YYCURSOR;
	{goto parseDelimiters_start;}
}


parseDelimiters_end:
	result->addSet(curset);
	result->delimiters = curset;
	return YYCURSOR;
}

YYCTYPE *GrammarParser::re2c_parsePreferredTargets(YYCTYPE *input) {
	marker = YYCURSOR;

parsePreferredTargets_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy80;
			} else {
				if(yych == 0x000A) goto yy76;
				goto yy78;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy76;
				if(yych <= 0x000D) goto yy78;
				goto yy80;
			} else {
				if(yych <= ' ') goto yy78;
				if(yych <= '"') goto yy80;
				goto yy87;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy80;
				if(yych <= '(') goto yy83;
				goto yy85;
			} else {
				if(yych == ';') goto yy89;
				goto yy80;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy82;
				if(yych <= 0x0084) goto yy80;
				goto yy76;
			} else {
				if(yych <= 0x2027) goto yy80;
				if(yych <= 0x2029) goto yy76;
				goto yy80;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 0x001B) {
		if(yych <= 0x000A) {
			if(yych != 0x0009) goto yy92;
		} else {
			if(yych == 0x000C) goto yy92;
			if(yych >= 0x000E) goto yy92;
		}
	} else {
		if(yych <= '\'') {
			if(yych <= ' ') goto yy75;
			if(yych != '#') goto yy92;
		} else {
			if(yych <= ')') goto yy75;
			if(yych != ';') goto yy92;
		}
	}
yy75:
	{goto parsePreferredTargets_end;}
yy76:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 0x001B) {
		if(yych <= 0x000A) {
			if(yych != 0x0009) goto yy92;
		} else {
			if(yych == 0x000C) goto yy92;
			if(yych >= 0x000E) goto yy92;
		}
	} else {
		if(yych <= '\'') {
			if(yych <= ' ') goto yy77;
			if(yych != '#') goto yy92;
		} else {
			if(yych <= ')') goto yy77;
			if(yych != ';') goto yy92;
		}
	}
yy77:
	{
		marker = YYCURSOR;
		result->lines++;
		goto parsePreferredTargets_start;
		}
yy78:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy96;
yy79:
	{
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy80:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy92;
yy81:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		if (!(buffer[0] == '=' && u_strlen(buffer) == 1)) {
			result->addPreferredTarget(buffer);
		}
		delete buffer;
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy82:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy91;
		goto yy92;
	} else {
		if(yych <= ')') goto yy91;
		if(yych == ';') goto yy91;
		goto yy92;
	}
yy83:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected ( on line %u!\n", result->lines); exit(1);}
yy85:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected ) on line %u!\n", result->lines); exit(1);}
yy87:
	++YYCURSOR;
	{
		YYCURSOR = re2c_skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy89:
	++YYCURSOR;
	{goto parsePreferredTargets_end;}
yy91:
	++YYCURSOR;
	yych = *YYCURSOR;
yy92:
	if(yych <= ' ') {
		if(yych <= 0x000B) {
			if(yych == 0x0009) goto yy81;
			if(yych <= 0x000A) goto yy91;
			goto yy81;
		} else {
			if(yych == 0x000D) goto yy81;
			if(yych <= 0x001B) goto yy91;
			goto yy81;
		}
	} else {
		if(yych <= ')') {
			if(yych == '#') goto yy81;
			if(yych <= '\'') goto yy91;
			goto yy81;
		} else {
			if(yych <= ';') {
				if(yych <= ':') goto yy91;
				goto yy81;
			} else {
				if(yych != '\\') goto yy91;
			}
		}
	}
yy93:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= 0x000C) {
		if(yych <= 0x0009) {
			if(yych <= 0x0008) goto yy91;
			goto yy81;
		} else {
			if(yych == 0x000B) goto yy81;
			goto yy91;
		}
	} else {
		if(yych <= ' ') {
			if(yych <= 0x000D) goto yy81;
			if(yych <= 0x001B) goto yy91;
			goto yy81;
		} else {
			if(yych == '\\') goto yy93;
			goto yy91;
		}
	}
yy95:
	++YYCURSOR;
	yych = *YYCURSOR;
yy96:
	if(yych <= 0x000B) {
		if(yych == 0x0009) goto yy95;
		if(yych <= 0x000A) goto yy79;
		goto yy95;
	} else {
		if(yych <= 0x000D) {
			if(yych <= 0x000C) goto yy79;
			goto yy95;
		} else {
			if(yych <= 0x001B) goto yy79;
			if(yych <= ' ') goto yy95;
			goto yy79;
		}
	}
}


parsePreferredTargets_end:
	if (result->preferred_targets.empty()) {
		u_fprintf(ux_stderr, "Warning: PREFERRED-TARGETS was declared with no elements on line %u.\n", result->lines);
	}
	return YYCURSOR;
}

KEYWORDS GrammarParser::re2c_scan(YYCTYPE *input) {
	KEYWORDS retval = K_IGNORE;
	YYCTYPE *YYMARKER = 0;
	
scan_start:

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	yych = *YYCURSOR;
	if(yych <= 'R') {
		if(yych <= 'C') {
			if(yych <= 0x000C) {
				if(yych <= 0x0009) {
					if(yych >= 0x0001) goto yy118;
				} else {
					if(yych == 0x000B) goto yy118;
					goto yy101;
				}
			} else {
				if(yych <= '@') {
					if(yych == '#') goto yy116;
					goto yy118;
				} else {
					if(yych <= 'A') goto yy106;
					if(yych <= 'B') goto yy105;
					goto yy110;
				}
			}
		} else {
			if(yych <= 'K') {
				if(yych <= 'H') {
					if(yych <= 'D') goto yy111;
					if(yych <= 'E') goto yy112;
					goto yy118;
				} else {
					if(yych <= 'I') goto yy115;
					if(yych <= 'J') goto yy113;
					goto yy118;
				}
			} else {
				if(yych <= 'O') {
					if(yych <= 'L') goto yy114;
					if(yych <= 'M') goto yy107;
					goto yy118;
				} else {
					if(yych <= 'P') goto yy103;
					if(yych <= 'Q') goto yy118;
					goto yy108;
				}
			}
		}
	} else {
		if(yych <= 'k') {
			if(yych <= 'c') {
				if(yych <= '`') {
					if(yych <= 'S') goto yy109;
					goto yy118;
				} else {
					if(yych <= 'a') goto yy106;
					if(yych <= 'b') goto yy105;
					goto yy110;
				}
			} else {
				if(yych <= 'h') {
					if(yych <= 'd') goto yy111;
					if(yych <= 'e') goto yy112;
					goto yy118;
				} else {
					if(yych <= 'i') goto yy115;
					if(yych <= 'j') goto yy113;
					goto yy118;
				}
			}
		} else {
			if(yych <= 'r') {
				if(yych <= 'o') {
					if(yych <= 'l') goto yy114;
					if(yych <= 'm') goto yy107;
					goto yy118;
				} else {
					if(yych <= 'p') goto yy103;
					if(yych <= 'q') goto yy118;
					goto yy108;
				}
			} else {
				if(yych <= 0x0085) {
					if(yych <= 's') goto yy109;
					if(yych <= 0x0084) goto yy118;
					goto yy101;
				} else {
					if(yych <= 0x2027) goto yy118;
					if(yych <= 0x2029) goto yy101;
					goto yy118;
				}
			}
		}
	}
	++YYCURSOR;
	{retval = K_IGNORE; goto scan_end;}
yy101:
	++YYCURSOR;
	{result->lines++; goto scan_start;}
yy103:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'R') goto yy299;
	if(yych == 'r') goto yy299;
yy104:
	{goto scan_start;}
yy105:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'E') goto yy284;
	if(yych == 'e') goto yy284;
	goto yy104;
yy106:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	switch(yych) {
	case 'B':
	case 'b':	goto yy251;
	case 'D':
	case 'd':	goto yy250;
	case 'F':
	case 'f':	goto yy254;
	case 'N':
	case 'n':	goto yy253;
	case 'P':
	case 'p':	goto yy252;
	default:	goto yy104;
	}
yy107:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'A') goto yy229;
	if(yych == 'a') goto yy229;
	goto yy104;
yy108:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'E') goto yy208;
	if(yych == 'e') goto yy208;
	goto yy104;
yy109:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= 'U') {
		if(yych == 'E') goto yy173;
		if(yych <= 'T') goto yy104;
		goto yy174;
	} else {
		if(yych <= 'e') {
			if(yych <= 'd') goto yy104;
			goto yy173;
		} else {
			if(yych == 'u') goto yy174;
			goto yy104;
		}
	}
yy110:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'O') goto yy152;
	if(yych == 'o') goto yy152;
	goto yy104;
yy111:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'E') goto yy141;
	if(yych == 'e') goto yy141;
	goto yy104;
yy112:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= 'X') {
		if(yych == 'N') goto yy131;
		if(yych <= 'W') goto yy104;
		goto yy132;
	} else {
		if(yych <= 'n') {
			if(yych <= 'm') goto yy104;
			goto yy131;
		} else {
			if(yych == 'x') goto yy132;
			goto yy104;
		}
	}
yy113:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'U') goto yy127;
	if(yych == 'u') goto yy127;
	goto yy104;
yy114:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'I') goto yy123;
	if(yych == 'i') goto yy123;
	goto yy104;
yy115:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'F') goto yy119;
	if(yych == 'f') goto yy119;
	goto yy104;
yy116:
	++YYCURSOR;
	{YYCURSOR = re2c_skipline(YYCURSOR); goto scan_start;}
yy118:
	yych = *++YYCURSOR;
	goto yy104;
yy119:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy121;
	if(yych == 'f') goto yy121;
yy120:
	YYCURSOR = YYMARKER;
	if(yyaccept <= 1) {
		if(yyaccept <= 0) {
			goto yy104;
		} else {
			goto yy147;
		}
	} else {
		if(yyaccept <= 2) {
			goto yy185;
		} else {
			goto yy231;
		}
	}
yy121:
	++YYCURSOR;
	{goto scan_start;}
yy123:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy124;
	if(yych != 's') goto yy120;
yy124:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy125;
	if(yych != 't') goto yy120;
yy125:
	++YYCURSOR;
	{goto scan_start;}
yy127:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy128;
	if(yych != 'm') goto yy120;
yy128:
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy129;
	if(yych != 'p') goto yy120;
yy129:
	++YYCURSOR;
	{goto scan_start;}
yy131:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy139;
	if(yych == 'd') goto yy139;
	goto yy120;
yy132:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy133;
	if(yych != 'e') goto yy120;
yy133:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy134;
	if(yych != 'c') goto yy120;
yy134:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy135;
	if(yych != 'u') goto yy120;
yy135:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy136;
	if(yych != 't') goto yy120;
yy136:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy137;
	if(yych != 'e') goto yy120;
yy137:
	++YYCURSOR;
	{goto scan_start;}
yy139:
	++YYCURSOR;
	{retval = K_IGNORE; goto scan_end;}
yy141:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy142;
	if(yych != 'l') goto yy120;
yy142:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy143;
	if(yych != 'i') goto yy120;
yy143:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy144;
	if(yych != 'm') goto yy120;
yy144:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy145;
	if(yych != 'i') goto yy120;
yy145:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy146;
	if(yych != 't') goto yy120;
yy146:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'E') goto yy148;
	if(yych == 'e') goto yy148;
yy147:
	{goto scan_start;}
yy148:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy149;
	if(yych != 'r') goto yy120;
yy149:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy150;
	if(yych != 's') goto yy120;
yy150:
	++YYCURSOR;
	{YYCURSOR = re2c_parseDelimiters(YYCURSOR); goto scan_start;}
yy152:
	yych = *++YYCURSOR;
	if(yych <= 'R') {
		if(yych == 'N') goto yy154;
		if(yych <= 'Q') goto yy120;
	} else {
		if(yych <= 'n') {
			if(yych <= 'm') goto yy120;
			goto yy154;
		} else {
			if(yych != 'r') goto yy120;
		}
	}
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy164;
	if(yych == 'r') goto yy164;
	goto yy120;
yy154:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy155;
	if(yych != 's') goto yy120;
yy155:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy156;
	if(yych != 't') goto yy120;
yy156:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy157;
	if(yych != 'r') goto yy120;
yy157:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy158;
	if(yych != 'a') goto yy120;
yy158:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy159;
	if(yych != 'i') goto yy120;
yy159:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy160;
	if(yych != 'n') goto yy120;
yy160:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy161;
	if(yych != 't') goto yy120;
yy161:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy162;
	if(yych != 's') goto yy120;
yy162:
	++YYCURSOR;
	{goto scan_start;}
yy164:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy165;
	if(yych != 'e') goto yy120;
yy165:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy166;
	if(yych != 'c') goto yy120;
yy166:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy167;
	if(yych != 't') goto yy120;
yy167:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy168;
	if(yych != 'i') goto yy120;
yy168:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy169;
	if(yych != 'o') goto yy120;
yy169:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy170;
	if(yych != 'n') goto yy120;
yy170:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy171;
	if(yych != 's') goto yy120;
yy171:
	++YYCURSOR;
	{goto scan_start;}
yy173:
	yych = *++YYCURSOR;
	if(yych <= 'T') {
		if(yych <= 'K') {
			if(yych == 'C') goto yy186;
			goto yy120;
		} else {
			if(yych <= 'L') goto yy187;
			if(yych <= 'S') goto yy120;
			goto yy184;
		}
	} else {
		if(yych <= 'k') {
			if(yych == 'c') goto yy186;
			goto yy120;
		} else {
			if(yych <= 'l') goto yy187;
			if(yych == 't') goto yy184;
			goto yy120;
		}
	}
yy174:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy175;
	if(yych != 'b') goto yy120;
yy175:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy176;
	if(yych != 's') goto yy120;
yy176:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy177;
	if(yych != 't') goto yy120;
yy177:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy178;
	if(yych != 'i') goto yy120;
yy178:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy179;
	if(yych != 't') goto yy120;
yy179:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy180;
	if(yych != 'u') goto yy120;
yy180:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy181;
	if(yych != 't') goto yy120;
yy181:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy182;
	if(yych != 'e') goto yy120;
yy182:
	++YYCURSOR;
	{goto scan_start;}
yy184:
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= 'V') {
		if(yych == 'S') goto yy197;
		if(yych >= 'V') goto yy199;
	} else {
		if(yych <= 's') {
			if(yych >= 's') goto yy197;
		} else {
			if(yych == 'v') goto yy199;
		}
	}
yy185:
	{goto scan_start;}
yy186:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy192;
	if(yych == 't') goto yy192;
	goto yy120;
yy187:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy188;
	if(yych != 'e') goto yy120;
yy188:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy189;
	if(yych != 'c') goto yy120;
yy189:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy190;
	if(yych != 't') goto yy120;
yy190:
	++YYCURSOR;
	{goto scan_start;}
yy192:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy193;
	if(yych != 'i') goto yy120;
yy193:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy194;
	if(yych != 'o') goto yy120;
yy194:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy195;
	if(yych != 'n') goto yy120;
yy195:
	++YYCURSOR;
	{goto scan_start;}
yy197:
	++YYCURSOR;
	{goto scan_start;}
yy199:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy200;
	if(yych != 'a') goto yy120;
yy200:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy201;
	if(yych != 'r') goto yy120;
yy201:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy202;
	if(yych != 'i') goto yy120;
yy202:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy203;
	if(yych != 'a') goto yy120;
yy203:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy204;
	if(yych != 'b') goto yy120;
yy204:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy205;
	if(yych != 'l') goto yy120;
yy205:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy206;
	if(yych != 'e') goto yy120;
yy206:
	++YYCURSOR;
	{goto scan_start;}
yy208:
	yych = *++YYCURSOR;
	if(yych <= 'P') {
		if(yych == 'M') goto yy209;
		if(yych <= 'O') goto yy120;
		goto yy210;
	} else {
		if(yych <= 'm') {
			if(yych <= 'l') goto yy120;
		} else {
			if(yych == 'p') goto yy210;
			goto yy120;
		}
	}
yy209:
	yych = *++YYCURSOR;
	if(yych <= 'V') {
		if(yych == 'O') goto yy216;
		if(yych <= 'U') goto yy120;
		goto yy217;
	} else {
		if(yych <= 'o') {
			if(yych <= 'n') goto yy120;
			goto yy216;
		} else {
			if(yych == 'v') goto yy217;
			goto yy120;
		}
	}
yy210:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy211;
	if(yych != 'l') goto yy120;
yy211:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy212;
	if(yych != 'a') goto yy120;
yy212:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy213;
	if(yych != 'c') goto yy120;
yy213:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy214;
	if(yych != 'e') goto yy120;
yy214:
	++YYCURSOR;
	{goto scan_start;}
yy216:
	yych = *++YYCURSOR;
	if(yych == 'V') goto yy226;
	if(yych == 'v') goto yy226;
	goto yy120;
yy217:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy218;
	if(yych != 'a') goto yy120;
yy218:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy219;
	if(yych != 'r') goto yy120;
yy219:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy220;
	if(yych != 'i') goto yy120;
yy220:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy221;
	if(yych != 'a') goto yy120;
yy221:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy222;
	if(yych != 'b') goto yy120;
yy222:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy223;
	if(yych != 'l') goto yy120;
yy223:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy224;
	if(yych != 'e') goto yy120;
yy224:
	++YYCURSOR;
	{goto scan_start;}
yy226:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy227;
	if(yych != 'e') goto yy120;
yy227:
	++YYCURSOR;
	{goto scan_start;}
yy229:
	yych = *++YYCURSOR;
	if(yych <= 'T') {
		if(yych == 'P') goto yy230;
		if(yych <= 'S') goto yy120;
		goto yy232;
	} else {
		if(yych <= 'p') {
			if(yych <= 'o') goto yy120;
		} else {
			if(yych == 't') goto yy232;
			goto yy120;
		}
	}
yy230:
	yyaccept = 3;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 'P') goto yy236;
	if(yych == 'p') goto yy236;
yy231:
	{goto scan_start;}
yy232:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy233;
	if(yych != 'c') goto yy120;
yy233:
	yych = *++YYCURSOR;
	if(yych == 'H') goto yy234;
	if(yych != 'h') goto yy120;
yy234:
	++YYCURSOR;
	{goto scan_start;}
yy236:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy237;
	if(yych != 'i') goto yy120;
yy237:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy238;
	if(yych != 'n') goto yy120;
yy238:
	yych = *++YYCURSOR;
	if(yych == 'G') goto yy239;
	if(yych != 'g') goto yy120;
yy239:
	yych = *++YYCURSOR;
	if(yych <= 'R') {
		if(yych == '-') goto yy242;
		goto yy120;
	} else {
		if(yych <= 'S') goto yy240;
		if(yych != 's') goto yy120;
	}
yy240:
	++YYCURSOR;
	{goto scan_start;}
yy242:
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy243;
	if(yych != 'p') goto yy120;
yy243:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy244;
	if(yych != 'r') goto yy120;
yy244:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy245;
	if(yych != 'e') goto yy120;
yy245:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy246;
	if(yych != 'f') goto yy120;
yy246:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy247;
	if(yych != 'i') goto yy120;
yy247:
	yych = *++YYCURSOR;
	if(yych == 'X') goto yy248;
	if(yych != 'x') goto yy120;
yy248:
	++YYCURSOR;
	{goto scan_start;}
yy250:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy282;
	if(yych == 'd') goto yy282;
	goto yy120;
yy251:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy278;
	if(yych == 'o') goto yy278;
	goto yy120;
yy252:
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy273;
	if(yych == 'p') goto yy273;
	goto yy120;
yy253:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy268;
	if(yych == 'c') goto yy268;
	goto yy120;
yy254:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy255;
	if(yych != 't') goto yy120;
yy255:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy256;
	if(yych != 'e') goto yy120;
yy256:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy257;
	if(yych != 'r') goto yy120;
yy257:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy120;
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy259;
	if(yych != 's') goto yy120;
yy259:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy260;
	if(yych != 'e') goto yy120;
yy260:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy261;
	if(yych != 'c') goto yy120;
yy261:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy262;
	if(yych != 't') goto yy120;
yy262:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy263;
	if(yych != 'i') goto yy120;
yy263:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy264;
	if(yych != 'o') goto yy120;
yy264:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy265;
	if(yych != 'n') goto yy120;
yy265:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy266;
	if(yych != 's') goto yy120;
yy266:
	++YYCURSOR;
	{goto scan_start;}
yy268:
	yych = *++YYCURSOR;
	if(yych == 'H') goto yy269;
	if(yych != 'h') goto yy120;
yy269:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy270;
	if(yych != 'o') goto yy120;
yy270:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy271;
	if(yych != 'r') goto yy120;
yy271:
	++YYCURSOR;
	{goto scan_start;}
yy273:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy274;
	if(yych != 'e') goto yy120;
yy274:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy275;
	if(yych != 'n') goto yy120;
yy275:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy276;
	if(yych != 'd') goto yy120;
yy276:
	++YYCURSOR;
	{goto scan_start;}
yy278:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy279;
	if(yych != 'r') goto yy120;
yy279:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy280;
	if(yych != 't') goto yy120;
yy280:
	++YYCURSOR;
	{goto scan_start;}
yy282:
	++YYCURSOR;
	{goto scan_start;}
yy284:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy285;
	if(yych != 'f') goto yy120;
yy285:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy286;
	if(yych != 'o') goto yy120;
yy286:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy287;
	if(yych != 'r') goto yy120;
yy287:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy288;
	if(yych != 'e') goto yy120;
yy288:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy120;
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy290;
	if(yych != 's') goto yy120;
yy290:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy291;
	if(yych != 'e') goto yy120;
yy291:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy292;
	if(yych != 'c') goto yy120;
yy292:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy293;
	if(yych != 't') goto yy120;
yy293:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy294;
	if(yych != 'i') goto yy120;
yy294:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy295;
	if(yych != 'o') goto yy120;
yy295:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy296;
	if(yych != 'n') goto yy120;
yy296:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy297;
	if(yych != 's') goto yy120;
yy297:
	++YYCURSOR;
	{goto scan_start;}
yy299:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy300;
	if(yych != 'e') goto yy120;
yy300:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy301;
	if(yych != 'f') goto yy120;
yy301:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy302;
	if(yych != 'e') goto yy120;
yy302:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy303;
	if(yych != 'r') goto yy120;
yy303:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy304;
	if(yych != 'r') goto yy120;
yy304:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy305;
	if(yych != 'e') goto yy120;
yy305:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy306;
	if(yych != 'd') goto yy120;
yy306:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy120;
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy308;
	if(yych != 't') goto yy120;
yy308:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy309;
	if(yych != 'a') goto yy120;
yy309:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy310;
	if(yych != 'r') goto yy120;
yy310:
	yych = *++YYCURSOR;
	if(yych == 'G') goto yy311;
	if(yych != 'g') goto yy120;
yy311:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy312;
	if(yych != 'e') goto yy120;
yy312:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy313;
	if(yych != 't') goto yy120;
yy313:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy314;
	if(yych != 's') goto yy120;
yy314:
	++YYCURSOR;
	{YYCURSOR = re2c_parsePreferredTargets(YYCURSOR); goto scan_start;}
}


scan_end:
	return retval;
}

int GrammarParser::re2c_grammar_from_ufile(UFILE *input) {
	u_frewind(input);
	if (u_feof(input)) {
		u_fprintf(ux_stderr, "Error: Input is null - nothing to parse!\n");
		return -1;
	}
	if (!result) {
		u_fprintf(ux_stderr, "Error: No preallocated grammar provided - cannot continue!\n");
		return -1;
	}
	
	free_keywords();
	free_regexps();
	free_strings();

	int error = init_keywords();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_keywords returned %i!\n", error);
		return error;
	}

	error = init_regexps();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_regexps returned %i!\n", error);
		return error;
	}

	error = init_strings();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_strings returned %i!\n", error);
		return error;
	}

	UChar *buffer = new UChar[result->grammar_size+8];
	memset(buffer, 0, sizeof(UChar)*(result->grammar_size+8));
	u_file_read(buffer, result->grammar_size, input);
	
	UChar *offset = buffer;
	if (u_strlen(offset) > 0) {
		result->lines = 1;
		re2c_scan(offset);
	} else {
		u_fprintf(ux_stderr, "Error: Grammar file is empty - nothing to parse!\n");
		return -1;
	}
	
	delete buffer;
	free_regexps();
	free_strings();

	return 0;
}
