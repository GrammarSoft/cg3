/* Generated by re2c 0.11.0 on Wed Mar 14 03:09:56 2007 */
/*
 * Copyright (C) 2006, GrammarSoft Aps
 * and the VISL project at the University of Southern Denmark.
 * All Rights Reserved.
 *
 * The contents of this file are subject to the GrammarSoft Public
 * License Version 1.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.grammarsoft.com/GSPL or
 * http://visl.sdu.dk/GSPL.txt
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 */

#include "GPRE2C.h"

// This disables the warnings for \uXXXX style characters.
#ifdef WIN32
	#pragma warning( disable : 4428 4566 )
#endif

using namespace CG3;
using namespace CG3::Strings;
#define YYCURSOR        input
#define __WHITESPACE	"%[^ \t\x0A\x0B\x0C\x0D\u001C\u001D\u001E\u001F\u2028\u2029\x85]"



YYCTYPE *GPRE2C::skipline(YYCTYPE *input) {
skipline_start:

{
	YYCTYPE yych;

	yych = *YYCURSOR;
	if(yych <= 0x000C) {
		if(yych <= 0x0009) {
			if(yych >= 0x0001) goto yy6;
		} else {
			if(yych == 0x000B) goto yy6;
			goto yy4;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= 0x0084) goto yy6;
			goto yy4;
		} else {
			if(yych <= 0x2027) goto yy6;
			if(yych <= 0x2029) goto yy4;
			goto yy6;
		}
	}
	++YYCURSOR;
	{goto skipline_end;}
yy4:
	++YYCURSOR;
	{result->lines++; goto skipline_end;}
yy6:
	++YYCURSOR;
	{goto skipline_start;}
}

skipline_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseCompositeTag(YYCTYPE *input, Set *set) {
	CG3::CompositeTag *ctag = result->allocateCompositeTag();
	marker = YYCURSOR;

parseCompositeTag_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy14;
			} else {
				if(yych == 0x000A) goto yy12;
				goto yy25;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy12;
				if(yych <= 0x000D) goto yy25;
				goto yy14;
			} else {
				if(yych <= ' ') goto yy25;
				if(yych <= '"') goto yy14;
				goto yy17;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy14;
				if(yych <= '(') goto yy19;
				goto yy21;
			} else {
				if(yych == ';') goto yy23;
				goto yy14;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy16;
				if(yych <= 0x0084) goto yy14;
				goto yy12;
			} else {
				if(yych <= 0x2027) goto yy14;
				if(yych <= 0x2029) goto yy12;
				goto yy14;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy28;
			if(yych >= 0x000E) goto yy28;
		} else {
			if(yych <= ' ') goto yy11;
			if(yych != '#') goto yy28;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy11;
			if(yych != ';') goto yy28;
		} else {
			if(yych <= 0x0085) goto yy11;
			if(yych <= 0x2027) goto yy28;
			if(yych >= 0x202A) goto yy28;
		}
	}
yy11:
	{goto parseCompositeTag_end;}
yy12:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		result->lines++;
		goto parseCompositeTag_start;
		}
yy14:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy28;
yy15:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy16:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy27;
		goto yy28;
	} else {
		if(yych <= ')') goto yy27;
		if(yych == ';') goto yy27;
		goto yy28;
	}
yy17:
	++YYCURSOR;
	{
		YYCURSOR = skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy19:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ( on line %u!\n", result->lines); exit(1);}
yy21:
	++YYCURSOR;
	{goto parseCompositeTag_end;}
yy23:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Found ; before ) on line %u!\n", result->lines); exit(1);}
yy25:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy27:
	++YYCURSOR;
	yych = *YYCURSOR;
yy28:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy27;
			if(yych <= 0x000D) goto yy15;
			if(yych <= 0x001B) goto yy27;
			goto yy15;
		} else {
			if(yych == '#') goto yy15;
			if(yych <= '\'') goto yy27;
			goto yy15;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy15;
			if(yych <= '[') goto yy27;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy27;
				goto yy15;
			} else {
				if(yych <= 0x2027) goto yy27;
				if(yych <= 0x2029) goto yy15;
				goto yy27;
			}
		}
	}
yy29:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy27;
			goto yy15;
		} else {
			if(yych <= 0x001B) goto yy27;
			if(yych <= ' ') goto yy15;
			goto yy27;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy29;
			if(yych <= 0x0084) goto yy27;
			goto yy15;
		} else {
			if(yych <= 0x2027) goto yy27;
			if(yych <= 0x2029) goto yy15;
			goto yy27;
		}
	}
}


parseCompositeTag_end:
	if (ctag->tags_map.empty()) {
		u_fprintf(ux_stderr, "Error: Empty () on line %u!\n", result->lines);
		exit(1);
	}
	result->addCompositeTagToSet(set, ctag);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseInlineSet(YYCTYPE *input, Set **ret_set) {
	CG3::Set *curset = result->allocateSet();
	curset->line = result->lines;
	curset->setName((uint32_t)0);
	CG3::CompositeTag *ctag = result->allocateCompositeTag();
	marker = YYCURSOR;

parseInlineSet_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy37;
			} else {
				if(yych == 0x000A) goto yy35;
				goto yy48;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy35;
				if(yych <= 0x000D) goto yy48;
				goto yy37;
			} else {
				if(yych <= ' ') goto yy48;
				if(yych <= '"') goto yy37;
				goto yy40;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy37;
				if(yych <= '(') goto yy42;
				goto yy44;
			} else {
				if(yych == ';') goto yy46;
				goto yy37;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy39;
				if(yych <= 0x0084) goto yy37;
				goto yy35;
			} else {
				if(yych <= 0x2027) goto yy37;
				if(yych <= 0x2029) goto yy35;
				goto yy37;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy51;
			if(yych >= 0x000E) goto yy51;
		} else {
			if(yych <= ' ') goto yy34;
			if(yych != '#') goto yy51;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy34;
			if(yych != ';') goto yy51;
		} else {
			if(yych <= 0x0085) goto yy34;
			if(yych <= 0x2027) goto yy51;
			if(yych >= 0x202A) goto yy51;
		}
	}
yy34:
	{goto parseInlineSet_end;}
yy35:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseInlineSet_start;}
yy37:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy51;
yy38:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseInlineSet_start;
		}
yy39:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy50;
		goto yy51;
	} else {
		if(yych <= ')') goto yy50;
		if(yych == ';') goto yy50;
		goto yy51;
	}
yy40:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseInlineSet_start;}
yy42:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ( on line %u!\n", result->lines); exit(1);}
yy44:
	++YYCURSOR;
	{goto parseInlineSet_end;}
yy46:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Found ; before ) on line %u!\n", result->lines); exit(1);}
yy48:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parseInlineSet_start;
		}
yy50:
	++YYCURSOR;
	yych = *YYCURSOR;
yy51:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy50;
			if(yych <= 0x000D) goto yy38;
			if(yych <= 0x001B) goto yy50;
			goto yy38;
		} else {
			if(yych == '#') goto yy38;
			if(yych <= '\'') goto yy50;
			goto yy38;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy38;
			if(yych <= '[') goto yy50;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy50;
				goto yy38;
			} else {
				if(yych <= 0x2027) goto yy50;
				if(yych <= 0x2029) goto yy38;
				goto yy50;
			}
		}
	}
yy52:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy50;
			goto yy38;
		} else {
			if(yych <= 0x001B) goto yy50;
			if(yych <= ' ') goto yy38;
			goto yy50;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy52;
			if(yych <= 0x0084) goto yy50;
			goto yy38;
		} else {
			if(yych <= 0x2027) goto yy50;
			if(yych <= 0x2029) goto yy38;
			goto yy50;
		}
	}
}


parseInlineSet_end:
	result->addCompositeTagToSet(curset, ctag);
	result->addSet(curset);
	*ret_set = curset;
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseSetList(YYCTYPE *input, Set *set) {
	bool want_set = true;
	marker = YYCURSOR;

parseSetList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= ',') {
		if(yych <= 0x001B) {
			if(yych <= 0x000A) {
				if(yych <= 0x0000) goto yy56;
				if(yych <= 0x0008) goto yy64;
				if(yych <= 0x0009) goto yy71;
				goto yy58;
			} else {
				if(yych == 0x000C) goto yy58;
				if(yych <= 0x000D) goto yy71;
				goto yy64;
			}
		} else {
			if(yych <= '#') {
				if(yych <= ' ') goto yy71;
				if(yych <= '!') goto yy60;
				if(yych <= '"') goto yy64;
				goto yy65;
			} else {
				if(yych <= '(') {
					if(yych <= '\'') goto yy64;
					goto yy67;
				} else {
					if(yych <= ')') goto yy69;
					if(yych <= '+') goto yy60;
					goto yy64;
				}
			}
		}
	} else {
		if(yych <= '^') {
			if(yych <= 'N') {
				if(yych <= '-') goto yy60;
				if(yych == ';') goto yy73;
				goto yy64;
			} else {
				if(yych <= '[') {
					if(yych <= 'O') goto yy62;
					goto yy64;
				} else {
					if(yych <= '\\') goto yy66;
					if(yych <= ']') goto yy64;
					goto yy60;
				}
			}
		} else {
			if(yych <= '|') {
				if(yych == 'o') goto yy62;
				if(yych <= '{') goto yy64;
				goto yy60;
			} else {
				if(yych <= 0x0085) {
					if(yych <= 0x0084) goto yy64;
					goto yy58;
				} else {
					if(yych <= 0x2027) goto yy64;
					if(yych <= 0x2029) goto yy58;
					goto yy64;
				}
			}
		}
	}
yy56:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy76;
			if(yych >= 0x000E) goto yy76;
		} else {
			if(yych <= ' ') goto yy57;
			if(yych <= '\'') goto yy76;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy76;
		} else {
			if(yych <= 0x0085) goto yy57;
			if(yych <= 0x2027) goto yy76;
			if(yych >= 0x202A) goto yy76;
		}
	}
yy57:
	{goto parseSetList_end;}
yy58:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseSetList_start;}
yy60:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy76;
			if(yych >= 0x000E) goto yy76;
		} else {
			if(yych <= ' ') goto yy61;
			if(yych <= '\'') goto yy76;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy76;
		} else {
			if(yych <= 0x0085) goto yy61;
			if(yych <= 0x2027) goto yy76;
			if(yych >= 0x202A) goto yy76;
		}
	}
yy61:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		if (want_set) {
			u_fprintf(ux_stderr, "Error: Missing set for operator %S on line %u!\n", buffer, result->lines);
			exit(1);
		}
		uint32_t set_op = ux_isSetOp(buffer);
		set->set_ops.push_back(set_op);
		want_set = true;
		marker = YYCURSOR;
		goto parseSetList_start;
		}
yy62:
	++YYCURSOR;
	if((yych = *YYCURSOR) == 'R') goto yy79;
	if(yych == 'r') goto yy79;
	goto yy76;
yy63:
	{
		if (!want_set) {
			return YYCURSOR;
		}
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		uint32_t set_hash = hash_sdbm_uchar(buffer, 0);
		if (result->set_alias.find(set_hash) != result->set_alias.end()) {
			set_hash = result->set_alias[set_hash];
		}
		set_hash = result->getSet(set_hash)->hash;
		set->sets.push_back(set_hash);
		delete buffer;
		marker = YYCURSOR;
		want_set = false;
		goto parseSetList_start;
		}
yy64:
	yych = *++YYCURSOR;
	goto yy76;
yy65:
	yych = *++YYCURSOR;
	goto yy76;
yy66:
	yych = *++YYCURSOR;
	if(yych <= '\'') goto yy76;
	if(yych <= ')') goto yy75;
	if(yych == ';') goto yy75;
	goto yy76;
yy67:
	++YYCURSOR;
	{
		if (!want_set) {
			return YYCURSOR;
		}
		Set *ret_set = 0;
		YYCURSOR = parseInlineSet(YYCURSOR, &ret_set);
		uint32_t set_hash = ret_set->hash;
		if (result->set_alias.find(set_hash) != result->set_alias.end()) {
			set_hash = result->set_alias[set_hash];
		}
		set->sets.push_back(set_hash);
		marker = YYCURSOR;
		want_set = false;
		goto parseSetList_start;
		}
yy69:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ) on line %u!\n", result->lines); exit(1);}
yy71:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseSetList_start;}
yy73:
	++YYCURSOR;
	{goto parseSetList_end;}
yy75:
	++YYCURSOR;
	yych = *YYCURSOR;
yy76:
	if(yych <= ':') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy75;
			if(yych <= 0x000D) goto yy63;
			goto yy75;
		} else {
			if(yych <= ' ') goto yy63;
			if(yych <= '\'') goto yy75;
			if(yych <= ')') goto yy63;
			goto yy75;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy63;
			if(yych != '\\') goto yy75;
		} else {
			if(yych <= 0x0085) goto yy63;
			if(yych <= 0x2027) goto yy75;
			if(yych <= 0x2029) goto yy63;
			goto yy75;
		}
	}
yy77:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy75;
			goto yy63;
		} else {
			if(yych <= 0x001B) goto yy75;
			if(yych <= ' ') goto yy63;
			goto yy75;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy77;
			if(yych <= 0x0084) goto yy75;
			goto yy63;
		} else {
			if(yych <= 0x2027) goto yy75;
			if(yych <= 0x2029) goto yy63;
			goto yy75;
		}
	}
yy79:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy76;
			if(yych <= 0x000D) goto yy61;
			goto yy76;
		} else {
			if(yych <= ' ') goto yy61;
			if(yych <= '\'') goto yy76;
			goto yy61;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych == ';') goto yy61;
			goto yy76;
		} else {
			if(yych <= 0x0085) goto yy61;
			if(yych <= 0x2027) goto yy76;
			if(yych <= 0x2029) goto yy61;
			goto yy76;
		}
	}
}


parseSetList_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseTagList(YYCTYPE *input, Set *set) {
	marker = YYCURSOR;

parseTagList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy86;
			} else {
				if(yych == 0x000A) goto yy84;
				goto yy97;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy84;
				if(yych <= 0x000D) goto yy97;
				goto yy86;
			} else {
				if(yych <= ' ') goto yy97;
				if(yych <= '"') goto yy86;
				goto yy93;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy86;
				if(yych <= '(') goto yy89;
				goto yy91;
			} else {
				if(yych == ';') goto yy95;
				goto yy86;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy88;
				if(yych <= 0x0084) goto yy86;
				goto yy84;
			} else {
				if(yych <= 0x2027) goto yy86;
				if(yych <= 0x2029) goto yy84;
				goto yy86;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy100;
			if(yych >= 0x000E) goto yy100;
		} else {
			if(yych <= ' ') goto yy83;
			if(yych != '#') goto yy100;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy83;
			if(yych != ';') goto yy100;
		} else {
			if(yych <= 0x0085) goto yy83;
			if(yych <= 0x2027) goto yy100;
			if(yych >= 0x202A) goto yy100;
		}
	}
yy83:
	{goto parseTagList_end;}
yy84:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		result->lines++;
		goto parseTagList_start;
		}
yy86:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy100;
yy87:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::CompositeTag *ctag = result->allocateCompositeTag();
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		result->addCompositeTagToSet(set, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy88:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy99;
		goto yy100;
	} else {
		if(yych <= ')') goto yy99;
		if(yych == ';') goto yy99;
		goto yy100;
	}
yy89:
	++YYCURSOR;
	{
		YYCURSOR = parseCompositeTag(YYCURSOR, set);
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy91:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ) on line %u!\n", result->lines); exit(1);}
yy93:
	++YYCURSOR;
	{
		YYCURSOR = skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy95:
	++YYCURSOR;
	{goto parseTagList_end;}
yy97:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy99:
	++YYCURSOR;
	yych = *YYCURSOR;
yy100:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy99;
			if(yych <= 0x000D) goto yy87;
			if(yych <= 0x001B) goto yy99;
			goto yy87;
		} else {
			if(yych == '#') goto yy87;
			if(yych <= '\'') goto yy99;
			goto yy87;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy87;
			if(yych <= '[') goto yy99;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy99;
				goto yy87;
			} else {
				if(yych <= 0x2027) goto yy99;
				if(yych <= 0x2029) goto yy87;
				goto yy99;
			}
		}
	}
yy101:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy99;
			goto yy87;
		} else {
			if(yych <= 0x001B) goto yy99;
			if(yych <= ' ') goto yy87;
			goto yy99;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy101;
			if(yych <= 0x0084) goto yy99;
			goto yy87;
		} else {
			if(yych <= 0x2027) goto yy99;
			if(yych <= 0x2029) goto yy87;
			goto yy99;
		}
	}
}


parseTagList_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseDelimiters(YYCTYPE *input, STRINGS which) {
	CG3::Set *curset = result->allocateSet();
	curset->setName(stringbits[which]);
	curset->line = result->lines;

parseDelimiters_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= ':') {
		if(yych <= 0x000B) {
			if(yych <= 0x0000) goto yy105;
			if(yych == 0x000A) goto yy107;
			goto yy115;
		} else {
			if(yych <= 0x000C) goto yy107;
			if(yych == '#') goto yy111;
			goto yy115;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy113;
			if(yych == '=') goto yy109;
			goto yy115;
		} else {
			if(yych <= 0x0085) goto yy107;
			if(yych <= 0x2027) goto yy115;
			if(yych <= 0x2029) goto yy107;
			goto yy115;
		}
	}
yy105:
	++YYCURSOR;
	{goto parseDelimiters_end;}
yy107:
	++YYCURSOR;
	{result->lines++; goto parseDelimiters_start;}
yy109:
	++YYCURSOR;
	{YYCURSOR = parseTagList(YYCURSOR, curset); goto parseDelimiters_end;}
yy111:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); goto parseDelimiters_start;}
yy113:
	++YYCURSOR;
	{goto parseDelimiters_end;}
yy115:
	++YYCURSOR;
	{goto parseDelimiters_start;}
}


parseDelimiters_end:
	result->addSet(curset);
	if (which == S_DELIMITSET) {
		result->delimiters = curset;
	}
	else if (which == S_SOFTDELIMITSET) {
		result->soft_delimiters = curset;
	}
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseMapAddReplaceAppend(YYCTYPE *input, KEYWORDS which) {
	CG3::Rule *rule = result->allocateRule();
	rule->line = result->lines;
	rule->type = which;

	UChar wform[256];
	if (marker[0] == '"' && marker[1] == '<') {
		u_sscanf(marker, __WHITESPACE, &wform);
	}
	else if (last_entity[0] == '"' && last_entity[1] == '<') {
		u_sscanf(last_entity, __WHITESPACE, &wform);
	}
	if (wform[0] == '"' && wform[1] == '<' && u_strlen(wform) < 256 && wform[u_strlen(wform)] == 0) {
		Tag *wformt = result->allocateTag(wform);
		rule->wordform = wformt->rehash();
		result->addTag(wformt);
	}

parseMapAddReplaceAppend_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000A) {
			if(yych <= 0x0000) goto yy119;
			if(yych <= 0x0009) goto yy127;
			goto yy121;
		} else {
			if(yych == 0x000C) goto yy121;
			if(yych <= '"') goto yy127;
			goto yy123;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych == ';') goto yy125;
			goto yy127;
		} else {
			if(yych <= 0x0085) goto yy121;
			if(yych <= 0x2027) goto yy127;
			if(yych <= 0x2029) goto yy121;
			goto yy127;
		}
	}
yy119:
	++YYCURSOR;
	{goto parseMapAddReplaceAppend_end;}
yy121:
	++YYCURSOR;
	{result->lines++; goto parseMapAddReplaceAppend_start;}
yy123:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); goto parseMapAddReplaceAppend_start;}
yy125:
	++YYCURSOR;
	{goto parseMapAddReplaceAppend_end;}
yy127:
	++YYCURSOR;
	{goto parseMapAddReplaceAppend_start;}
}


parseMapAddReplaceAppend_end:
	addRuleToGrammar(rule);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseMappingPrefix(YYCTYPE *input) {
parseMappingPrefix_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= ':') {
		if(yych <= 0x000B) {
			if(yych <= 0x0000) goto yy131;
			if(yych == 0x000A) goto yy133;
			goto yy141;
		} else {
			if(yych <= 0x000C) goto yy133;
			if(yych == '#') goto yy137;
			goto yy141;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy139;
			if(yych == '=') goto yy135;
			goto yy141;
		} else {
			if(yych <= 0x0085) goto yy133;
			if(yych <= 0x2027) goto yy141;
			if(yych <= 0x2029) goto yy133;
			goto yy141;
		}
	}
yy131:
	++YYCURSOR;
	{goto parseMappingPrefix_end;}
yy133:
	++YYCURSOR;
	{result->lines++; goto parseMappingPrefix_start;}
yy135:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy137:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); goto parseMappingPrefix_start;}
yy139:
	++YYCURSOR;
	{goto parseMappingPrefix_end;}
yy141:
	++YYCURSOR;
	{goto parseMappingPrefix_start;}
}


parseMappingPrefix_middle:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy149;
			} else {
				if(yych == 0x000A) goto yy147;
				goto yy156;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy147;
				if(yych <= 0x000D) goto yy156;
				goto yy149;
			} else {
				if(yych <= ' ') goto yy156;
				if(yych <= '"') goto yy149;
				goto yy152;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy149;
				goto yy156;
			} else {
				if(yych == ';') goto yy154;
				goto yy149;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy151;
				if(yych <= 0x0084) goto yy149;
				goto yy147;
			} else {
				if(yych <= 0x2027) goto yy149;
				if(yych <= 0x2029) goto yy147;
				goto yy149;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy159;
			if(yych >= 0x000E) goto yy159;
		} else {
			if(yych <= ' ') goto yy146;
			if(yych != '#') goto yy159;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy146;
			if(yych != ';') goto yy159;
		} else {
			if(yych <= 0x0085) goto yy146;
			if(yych <= 0x2027) goto yy159;
			if(yych >= 0x202A) goto yy159;
		}
	}
yy146:
	{goto parseMappingPrefix_end;}
yy147:
	++YYCURSOR;
	{result->lines++; marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy149:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy159;
yy150:
	{result->mapping_prefix = marker[0]; goto parseMappingPrefix_middle;}
yy151:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy158;
		goto yy159;
	} else {
		if(yych <= ')') goto yy158;
		if(yych == ';') goto yy158;
		goto yy159;
	}
yy152:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy154:
	++YYCURSOR;
	{goto parseMappingPrefix_end;}
yy156:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy158:
	++YYCURSOR;
	yych = *YYCURSOR;
yy159:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy158;
			if(yych <= 0x000D) goto yy150;
			if(yych <= 0x001B) goto yy158;
			goto yy150;
		} else {
			if(yych == '#') goto yy150;
			if(yych <= '\'') goto yy158;
			goto yy150;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy150;
			if(yych <= '[') goto yy158;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy158;
				goto yy150;
			} else {
				if(yych <= 0x2027) goto yy158;
				if(yych <= 0x2029) goto yy150;
				goto yy158;
			}
		}
	}
yy160:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy158;
			goto yy150;
		} else {
			if(yych <= 0x001B) goto yy158;
			if(yych <= ' ') goto yy150;
			goto yy158;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy160;
			if(yych <= 0x0084) goto yy158;
			goto yy150;
		} else {
			if(yych <= 0x2027) goto yy158;
			if(yych <= 0x2029) goto yy150;
			goto yy158;
		}
	}
}

parseMappingPrefix_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseList(YYCTYPE *input) {
	marker = YYCURSOR;
	CG3::Set *curset = result->allocateSet();
	curset->line = result->lines;

parseList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '\'') {
		if(yych <= 0x000C) {
			if(yych <= 0x0009) {
				if(yych <= 0x0000) goto yy164;
				if(yych <= 0x0008) goto yy172;
				goto yy177;
			} else {
				if(yych == 0x000B) goto yy177;
				goto yy166;
			}
		} else {
			if(yych <= ' ') {
				if(yych <= 0x000D) goto yy177;
				if(yych <= 0x001B) goto yy172;
				goto yy177;
			} else {
				if(yych == '#') goto yy170;
				goto yy172;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ';') {
				if(yych <= ')') goto yy177;
				if(yych <= ':') goto yy172;
				goto yy175;
			} else {
				if(yych == '=') goto yy168;
				goto yy172;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy174;
				if(yych <= 0x0084) goto yy172;
				goto yy166;
			} else {
				if(yych <= 0x2027) goto yy172;
				if(yych <= 0x2029) goto yy166;
				goto yy172;
			}
		}
	}
yy164:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy180;
			if(yych >= 0x000E) goto yy180;
		} else {
			if(yych <= ' ') goto yy165;
			if(yych <= '\'') goto yy180;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy180;
		} else {
			if(yych <= 0x0085) goto yy165;
			if(yych <= 0x2027) goto yy180;
			if(yych >= 0x202A) goto yy180;
		}
	}
yy165:
	{goto parseList_end;}
yy166:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseList_start;}
yy168:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy180;
			if(yych >= 0x000E) goto yy180;
		} else {
			if(yych <= ' ') goto yy169;
			if(yych <= '\'') goto yy180;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy180;
		} else {
			if(yych <= 0x0085) goto yy169;
			if(yych <= 0x2027) goto yy180;
			if(yych >= 0x202A) goto yy180;
		}
	}
yy169:
	{YYCURSOR = parseTagList(YYCURSOR, curset); marker = YYCURSOR; goto parseList_end;}
yy170:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy180;
			if(yych >= 0x000E) goto yy180;
		} else {
			if(yych <= ' ') goto yy171;
			if(yych <= '\'') goto yy180;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy180;
		} else {
			if(yych <= 0x0085) goto yy171;
			if(yych <= 0x2027) goto yy180;
			if(yych >= 0x202A) goto yy180;
		}
	}
yy171:
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseList_start;}
yy172:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy180;
yy173:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		curset->setName(buffer);
		delete buffer;
		marker = YYCURSOR;
		goto parseList_start;
		}
yy174:
	yych = *++YYCURSOR;
	if(yych <= '\'') goto yy180;
	if(yych <= ')') goto yy179;
	if(yych == ';') goto yy179;
	goto yy180;
yy175:
	++YYCURSOR;
	{goto parseList_end;}
yy177:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseList_start;}
yy179:
	++YYCURSOR;
	yych = *YYCURSOR;
yy180:
	if(yych <= ':') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy179;
			if(yych <= 0x000D) goto yy173;
			goto yy179;
		} else {
			if(yych <= ' ') goto yy173;
			if(yych <= '\'') goto yy179;
			if(yych <= ')') goto yy173;
			goto yy179;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy173;
			if(yych != '\\') goto yy179;
		} else {
			if(yych <= 0x0085) goto yy173;
			if(yych <= 0x2027) goto yy179;
			if(yych <= 0x2029) goto yy173;
			goto yy179;
		}
	}
yy181:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy179;
			goto yy173;
		} else {
			if(yych <= 0x001B) goto yy179;
			if(yych <= ' ') goto yy173;
			goto yy179;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy181;
			if(yych <= 0x0084) goto yy179;
			goto yy173;
		} else {
			if(yych <= 0x2027) goto yy179;
			if(yych <= 0x2029) goto yy173;
			goto yy179;
		}
	}
}


parseList_end:
	result->addSet(curset);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseSet(YYCTYPE *input) {
	marker = YYCURSOR;
	CG3::Set *curset = result->allocateSet();
	curset->line = result->lines;
	if (result->lines == 1333) {
		input=input;
	}

parseSet_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '\'') {
		if(yych <= 0x000C) {
			if(yych <= 0x0009) {
				if(yych <= 0x0000) goto yy185;
				if(yych <= 0x0008) goto yy193;
				goto yy198;
			} else {
				if(yych == 0x000B) goto yy198;
				goto yy187;
			}
		} else {
			if(yych <= ' ') {
				if(yych <= 0x000D) goto yy198;
				if(yych <= 0x001B) goto yy193;
				goto yy198;
			} else {
				if(yych == '#') goto yy191;
				goto yy193;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ';') {
				if(yych <= ')') goto yy198;
				if(yych <= ':') goto yy193;
				goto yy196;
			} else {
				if(yych == '=') goto yy189;
				goto yy193;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy195;
				if(yych <= 0x0084) goto yy193;
				goto yy187;
			} else {
				if(yych <= 0x2027) goto yy193;
				if(yych <= 0x2029) goto yy187;
				goto yy193;
			}
		}
	}
yy185:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy201;
			if(yych >= 0x000E) goto yy201;
		} else {
			if(yych <= ' ') goto yy186;
			if(yych <= '\'') goto yy201;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy201;
		} else {
			if(yych <= 0x0085) goto yy186;
			if(yych <= 0x2027) goto yy201;
			if(yych >= 0x202A) goto yy201;
		}
	}
yy186:
	{goto parseSet_end;}
yy187:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseSet_start;}
yy189:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy201;
			if(yych >= 0x000E) goto yy201;
		} else {
			if(yych <= ' ') goto yy190;
			if(yych <= '\'') goto yy201;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy201;
		} else {
			if(yych <= 0x0085) goto yy190;
			if(yych <= 0x2027) goto yy201;
			if(yych >= 0x202A) goto yy201;
		}
	}
yy190:
	{YYCURSOR = parseSetList(YYCURSOR, curset); marker = YYCURSOR; goto parseSet_end;}
yy191:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy201;
			if(yych >= 0x000E) goto yy201;
		} else {
			if(yych <= ' ') goto yy192;
			if(yych <= '\'') goto yy201;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy201;
		} else {
			if(yych <= 0x0085) goto yy192;
			if(yych <= 0x2027) goto yy201;
			if(yych >= 0x202A) goto yy201;
		}
	}
yy192:
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseSet_start;}
yy193:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy201;
yy194:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		curset->setName(buffer);
		delete buffer;
		marker = YYCURSOR;
		goto parseSet_start;
		}
yy195:
	yych = *++YYCURSOR;
	if(yych <= '\'') goto yy201;
	if(yych <= ')') goto yy200;
	if(yych == ';') goto yy200;
	goto yy201;
yy196:
	++YYCURSOR;
	{goto parseSet_end;}
yy198:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseSet_start;}
yy200:
	++YYCURSOR;
	yych = *YYCURSOR;
yy201:
	if(yych <= ':') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy200;
			if(yych <= 0x000D) goto yy194;
			goto yy200;
		} else {
			if(yych <= ' ') goto yy194;
			if(yych <= '\'') goto yy200;
			if(yych <= ')') goto yy194;
			goto yy200;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy194;
			if(yych != '\\') goto yy200;
		} else {
			if(yych <= 0x0085) goto yy194;
			if(yych <= 0x2027) goto yy200;
			if(yych <= 0x2029) goto yy194;
			goto yy200;
		}
	}
yy202:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy200;
			goto yy194;
		} else {
			if(yych <= 0x001B) goto yy200;
			if(yych <= ' ') goto yy194;
			goto yy200;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy202;
			if(yych <= 0x0084) goto yy200;
			goto yy194;
		} else {
			if(yych <= 0x2027) goto yy200;
			if(yych <= 0x2029) goto yy194;
			goto yy200;
		}
	}
}


parseSet_end:
	if (curset->sets.size() == 1) {
		uint32_t res = curset->sets.at(0);
		result->set_alias[hash_sdbm_uchar(curset->name, 0)] = res;
		result->destroySet(curset);
		curset = result->getSet(res);
	}
	result->addSet(curset);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parsePreferredTargets(YYCTYPE *input) {
	marker = YYCURSOR;

parsePreferredTargets_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy210;
			} else {
				if(yych == 0x000A) goto yy208;
				goto yy221;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy208;
				if(yych <= 0x000D) goto yy221;
				goto yy210;
			} else {
				if(yych <= ' ') goto yy221;
				if(yych <= '"') goto yy210;
				goto yy217;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy210;
				if(yych <= '(') goto yy213;
				goto yy215;
			} else {
				if(yych == ';') goto yy219;
				goto yy210;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy212;
				if(yych <= 0x0084) goto yy210;
				goto yy208;
			} else {
				if(yych <= 0x2027) goto yy210;
				if(yych <= 0x2029) goto yy208;
				goto yy210;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy224;
			if(yych >= 0x000E) goto yy224;
		} else {
			if(yych <= ' ') goto yy207;
			if(yych != '#') goto yy224;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy207;
			if(yych != ';') goto yy224;
		} else {
			if(yych <= 0x0085) goto yy207;
			if(yych <= 0x2027) goto yy224;
			if(yych >= 0x202A) goto yy224;
		}
	}
yy207:
	{goto parsePreferredTargets_end;}
yy208:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		result->lines++;
		goto parsePreferredTargets_start;
		}
yy210:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy224;
yy211:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		if (!(buffer[0] == '=' && u_strlen(buffer) == 1)) {
			result->addPreferredTarget(buffer);
		}
		delete buffer;
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy212:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy223;
		goto yy224;
	} else {
		if(yych <= ')') goto yy223;
		if(yych == ';') goto yy223;
		goto yy224;
	}
yy213:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected ( on line %u!\n", result->lines); exit(1);}
yy215:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected ) on line %u!\n", result->lines); exit(1);}
yy217:
	++YYCURSOR;
	{
		YYCURSOR = skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy219:
	++YYCURSOR;
	{goto parsePreferredTargets_end;}
yy221:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy223:
	++YYCURSOR;
	yych = *YYCURSOR;
yy224:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy223;
			if(yych <= 0x000D) goto yy211;
			if(yych <= 0x001B) goto yy223;
			goto yy211;
		} else {
			if(yych == '#') goto yy211;
			if(yych <= '\'') goto yy223;
			goto yy211;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy211;
			if(yych <= '[') goto yy223;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy223;
				goto yy211;
			} else {
				if(yych <= 0x2027) goto yy223;
				if(yych <= 0x2029) goto yy211;
				goto yy223;
			}
		}
	}
yy225:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy223;
			goto yy211;
		} else {
			if(yych <= 0x001B) goto yy223;
			if(yych <= ' ') goto yy211;
			goto yy223;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy225;
			if(yych <= 0x0084) goto yy223;
			goto yy211;
		} else {
			if(yych <= 0x2027) goto yy223;
			if(yych <= 0x2029) goto yy211;
			goto yy223;
		}
	}
}


parsePreferredTargets_end:
	if (result->preferred_targets.empty()) {
		u_fprintf(ux_stderr, "Warning: PREFERRED-TARGETS was declared with no elements on line %u.\n", result->lines);
	}
	return YYCURSOR;
}

KEYWORDS GPRE2C::scan(YYCTYPE *input) {
	KEYWORDS retval = K_IGNORE;
	YYCTYPE *YYMARKER = 0;
	YYMARKER = YYMARKER; // Just to foil the warning. Compiler will optimize this away.
	marker = YYCURSOR;
	
scan_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= 'O') {
		if(yych <= ':') {
			if(yych <= 0x000D) {
				if(yych <= 0x0009) {
					if(yych <= 0x0000) goto yy229;
					if(yych <= 0x0008) goto yy250;
					goto yy233;
				} else {
					if(yych == 0x000B) goto yy233;
					if(yych <= 0x000C) goto yy231;
					goto yy233;
				}
			} else {
				if(yych <= '"') {
					if(yych <= 0x001B) goto yy250;
					if(yych <= ' ') goto yy233;
					goto yy250;
				} else {
					if(yych <= '#') goto yy248;
					if(yych <= '\'') goto yy250;
					if(yych <= ')') goto yy252;
					goto yy250;
				}
			}
		} else {
			if(yych <= 'E') {
				if(yych <= 'A') {
					if(yych <= ';') goto yy252;
					if(yych <= '@') goto yy250;
					goto yy239;
				} else {
					if(yych <= 'B') goto yy237;
					if(yych <= 'C') goto yy242;
					if(yych <= 'D') goto yy243;
					goto yy244;
				}
			} else {
				if(yych <= 'J') {
					if(yych <= 'H') goto yy250;
					if(yych <= 'I') goto yy247;
					goto yy245;
				} else {
					if(yych <= 'K') goto yy250;
					if(yych <= 'L') goto yy246;
					if(yych <= 'M') goto yy240;
					goto yy250;
				}
			}
		}
	} else {
		if(yych <= 'i') {
			if(yych <= '`') {
				if(yych <= 'R') {
					if(yych <= 'P') goto yy235;
					if(yych <= 'Q') goto yy250;
					goto yy241;
				} else {
					if(yych <= 'S') goto yy238;
					if(yych == '\\') goto yy251;
					goto yy250;
				}
			} else {
				if(yych <= 'c') {
					if(yych <= 'a') goto yy239;
					if(yych <= 'b') goto yy237;
					goto yy242;
				} else {
					if(yych <= 'd') goto yy243;
					if(yych <= 'e') goto yy244;
					if(yych <= 'h') goto yy250;
					goto yy247;
				}
			}
		} else {
			if(yych <= 'q') {
				if(yych <= 'l') {
					if(yych <= 'j') goto yy245;
					if(yych <= 'k') goto yy250;
					goto yy246;
				} else {
					if(yych <= 'm') goto yy240;
					if(yych == 'p') goto yy235;
					goto yy250;
				}
			} else {
				if(yych <= 0x0084) {
					if(yych <= 'r') goto yy241;
					if(yych <= 's') goto yy238;
					goto yy250;
				} else {
					if(yych <= 0x0085) goto yy231;
					if(yych <= 0x2027) goto yy250;
					if(yych <= 0x2029) goto yy231;
					goto yy250;
				}
			}
		}
	}
yy229:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy230;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy230;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy230;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy230:
	{retval = K_IGNORE; goto scan_end;}
yy231:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto scan_start;}
yy233:
	++YYCURSOR;
	{goto scan_start;}
yy235:
	++YYCURSOR;
	if((yych = *YYCURSOR) == 'R') goto yy452;
	if(yych == 'r') goto yy452;
	goto yy255;
yy236:
	{last_entity = YYCURSOR; goto scan_start;}
yy237:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy437;
	if(yych == 'e') goto yy437;
	goto yy255;
yy238:
	yych = *++YYCURSOR;
	if(yych <= 'U') {
		if(yych <= 'N') {
			if(yych == 'E') goto yy387;
			goto yy255;
		} else {
			if(yych <= 'O') goto yy388;
			if(yych <= 'T') goto yy255;
			goto yy389;
		}
	} else {
		if(yych <= 'n') {
			if(yych == 'e') goto yy387;
			goto yy255;
		} else {
			if(yych <= 'o') goto yy388;
			if(yych == 'u') goto yy389;
			goto yy255;
		}
	}
yy239:
	yych = *++YYCURSOR;
	switch(yych) {
	case 'B':
	case 'b':	goto yy353;
	case 'D':
	case 'd':	goto yy354;
	case 'F':
	case 'f':	goto yy355;
	case 'N':
	case 'n':	goto yy356;
	case 'P':
	case 'p':	goto yy357;
	default:	goto yy255;
	}
yy240:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy332;
	if(yych == 'a') goto yy332;
	goto yy255;
yy241:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy311;
	if(yych == 'e') goto yy311;
	goto yy255;
yy242:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy290;
	if(yych == 'o') goto yy290;
	goto yy255;
yy243:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy279;
	if(yych == 'e') goto yy279;
	goto yy255;
yy244:
	yych = *++YYCURSOR;
	if(yych <= 'X') {
		if(yych == 'N') goto yy269;
		if(yych <= 'W') goto yy255;
		goto yy270;
	} else {
		if(yych <= 'n') {
			if(yych <= 'm') goto yy255;
			goto yy269;
		} else {
			if(yych == 'x') goto yy270;
			goto yy255;
		}
	}
yy245:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy265;
	if(yych == 'u') goto yy265;
	goto yy255;
yy246:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy261;
	if(yych == 'i') goto yy261;
	goto yy255;
yy247:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy258;
	if(yych == 'f') goto yy258;
	goto yy255;
yy248:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy250:
	yych = *++YYCURSOR;
	goto yy255;
yy251:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy254;
		goto yy255;
	} else {
		if(yych <= ')') goto yy254;
		if(yych == ';') goto yy254;
		goto yy255;
	}
yy252:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected input on line %u!\n", result->lines); goto scan_end;}
yy254:
	++YYCURSOR;
	yych = *YYCURSOR;
yy255:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy254;
			if(yych <= 0x000D) goto yy236;
			if(yych <= 0x001B) goto yy254;
			goto yy236;
		} else {
			if(yych == '#') goto yy236;
			if(yych <= '\'') goto yy254;
			goto yy236;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy236;
			if(yych <= '[') goto yy254;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy254;
				goto yy236;
			} else {
				if(yych <= 0x2027) goto yy254;
				if(yych <= 0x2029) goto yy236;
				goto yy254;
			}
		}
	}
yy256:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy254;
			goto yy236;
		} else {
			if(yych <= 0x001B) goto yy254;
			if(yych <= ' ') goto yy236;
			goto yy254;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy256;
			if(yych <= 0x0084) goto yy254;
			goto yy236;
		} else {
			if(yych <= 0x2027) goto yy254;
			if(yych <= 0x2029) goto yy236;
			goto yy254;
		}
	}
yy258:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy259;
	if(yych != 'f') goto yy255;
yy259:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy260;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy260;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy260;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy260:
	{goto scan_start;}
yy261:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy262;
	if(yych != 's') goto yy255;
yy262:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy263;
	if(yych != 't') goto yy255;
yy263:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy264;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy264;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy264;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy264:
	{YYCURSOR = parseList(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy265:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy266;
	if(yych != 'm') goto yy255;
yy266:
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy267;
	if(yych != 'p') goto yy255;
yy267:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy268;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy268;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy268;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy268:
	{goto scan_start;}
yy269:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy277;
	if(yych == 'd') goto yy277;
	goto yy255;
yy270:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy271;
	if(yych != 'e') goto yy255;
yy271:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy272;
	if(yych != 'c') goto yy255;
yy272:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy273;
	if(yych != 'u') goto yy255;
yy273:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy274;
	if(yych != 't') goto yy255;
yy274:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy275;
	if(yych != 'e') goto yy255;
yy275:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy276;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy276;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy276;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy276:
	{goto scan_start;}
yy277:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy278;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy278;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy278;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy278:
	{retval = K_IGNORE; goto scan_end;}
yy279:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy280;
	if(yych != 'l') goto yy255;
yy280:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy281;
	if(yych != 'i') goto yy255;
yy281:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy282;
	if(yych != 'm') goto yy255;
yy282:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy283;
	if(yych != 'i') goto yy255;
yy283:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy284;
	if(yych != 't') goto yy255;
yy284:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ':') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy255;
			if(yych <= 0x000D) goto yy285;
			if(yych <= 0x001B) goto yy255;
		} else {
			if(yych <= '#') {
				if(yych <= '"') goto yy255;
			} else {
				if(yych <= '\'') goto yy255;
				if(yych >= '*') goto yy255;
			}
		}
	} else {
		if(yych <= 'e') {
			if(yych <= 'D') {
				if(yych >= '<') goto yy255;
			} else {
				if(yych <= 'E') goto yy286;
				if(yych <= 'd') goto yy255;
				goto yy286;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy255;
			} else {
				if(yych <= 0x2027) goto yy255;
				if(yych >= 0x202A) goto yy255;
			}
		}
	}
yy285:
	{goto scan_start;}
yy286:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy287;
	if(yych != 'r') goto yy255;
yy287:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy288;
	if(yych != 's') goto yy255;
yy288:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy289;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy289;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy289;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy289:
	{YYCURSOR = parseDelimiters(YYCURSOR, S_DELIMITSET); marker = YYCURSOR; goto scan_start;}
yy290:
	yych = *++YYCURSOR;
	if(yych <= 'R') {
		if(yych == 'N') goto yy292;
		if(yych <= 'Q') goto yy255;
	} else {
		if(yych <= 'n') {
			if(yych <= 'm') goto yy255;
			goto yy292;
		} else {
			if(yych != 'r') goto yy255;
		}
	}
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy302;
	if(yych == 'r') goto yy302;
	goto yy255;
yy292:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy293;
	if(yych != 's') goto yy255;
yy293:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy294;
	if(yych != 't') goto yy255;
yy294:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy295;
	if(yych != 'r') goto yy255;
yy295:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy296;
	if(yych != 'a') goto yy255;
yy296:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy297;
	if(yych != 'i') goto yy255;
yy297:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy298;
	if(yych != 'n') goto yy255;
yy298:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy299;
	if(yych != 't') goto yy255;
yy299:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy300;
	if(yych != 's') goto yy255;
yy300:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy301;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy301;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy301;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy301:
	{in_section = true; in_before_sections = in_after_sections = false; goto scan_start;}
yy302:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy303;
	if(yych != 'e') goto yy255;
yy303:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy304;
	if(yych != 'c') goto yy255;
yy304:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy305;
	if(yych != 't') goto yy255;
yy305:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy306;
	if(yych != 'i') goto yy255;
yy306:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy307;
	if(yych != 'o') goto yy255;
yy307:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy308;
	if(yych != 'n') goto yy255;
yy308:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy309;
	if(yych != 's') goto yy255;
yy309:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy310;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy310;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy310;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy310:
	{in_before_sections = true; in_section = in_after_sections = false; goto scan_start;}
yy311:
	yych = *++YYCURSOR;
	if(yych <= 'P') {
		if(yych == 'M') goto yy312;
		if(yych <= 'O') goto yy255;
		goto yy313;
	} else {
		if(yych <= 'm') {
			if(yych <= 'l') goto yy255;
		} else {
			if(yych == 'p') goto yy313;
			goto yy255;
		}
	}
yy312:
	yych = *++YYCURSOR;
	if(yych <= 'V') {
		if(yych == 'O') goto yy319;
		if(yych <= 'U') goto yy255;
		goto yy320;
	} else {
		if(yych <= 'o') {
			if(yych <= 'n') goto yy255;
			goto yy319;
		} else {
			if(yych == 'v') goto yy320;
			goto yy255;
		}
	}
yy313:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy314;
	if(yych != 'l') goto yy255;
yy314:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy315;
	if(yych != 'a') goto yy255;
yy315:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy316;
	if(yych != 'c') goto yy255;
yy316:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy317;
	if(yych != 'e') goto yy255;
yy317:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy318;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy318;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy318;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy318:
	{goto scan_start;}
yy319:
	yych = *++YYCURSOR;
	if(yych == 'V') goto yy329;
	if(yych == 'v') goto yy329;
	goto yy255;
yy320:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy321;
	if(yych != 'a') goto yy255;
yy321:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy322;
	if(yych != 'r') goto yy255;
yy322:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy323;
	if(yych != 'i') goto yy255;
yy323:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy324;
	if(yych != 'a') goto yy255;
yy324:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy325;
	if(yych != 'b') goto yy255;
yy325:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy326;
	if(yych != 'l') goto yy255;
yy326:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy327;
	if(yych != 'e') goto yy255;
yy327:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy328;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy328;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy328;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy328:
	{goto scan_start;}
yy329:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy330;
	if(yych != 'e') goto yy255;
yy330:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy331;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy331;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy331;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy331:
	{goto scan_start;}
yy332:
	yych = *++YYCURSOR;
	if(yych <= 'T') {
		if(yych == 'P') goto yy333;
		if(yych <= 'S') goto yy255;
		goto yy335;
	} else {
		if(yych <= 'p') {
			if(yych <= 'o') goto yy255;
		} else {
			if(yych == 't') goto yy335;
			goto yy255;
		}
	}
yy333:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ':') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy255;
			if(yych <= 0x000D) goto yy334;
			if(yych <= 0x001B) goto yy255;
		} else {
			if(yych <= '#') {
				if(yych <= '"') goto yy255;
			} else {
				if(yych <= '\'') goto yy255;
				if(yych >= '*') goto yy255;
			}
		}
	} else {
		if(yych <= 'p') {
			if(yych <= 'O') {
				if(yych >= '<') goto yy255;
			} else {
				if(yych <= 'P') goto yy339;
				if(yych <= 'o') goto yy255;
				goto yy339;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy255;
			} else {
				if(yych <= 0x2027) goto yy255;
				if(yych >= 0x202A) goto yy255;
			}
		}
	}
yy334:
	{YYCURSOR = parseMapAddReplaceAppend(YYCURSOR, K_MAP); marker = YYCURSOR; goto scan_start;}
yy335:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy336;
	if(yych != 'c') goto yy255;
yy336:
	yych = *++YYCURSOR;
	if(yych == 'H') goto yy337;
	if(yych != 'h') goto yy255;
yy337:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy338;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy338;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy338;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy338:
	{goto scan_start;}
yy339:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy340;
	if(yych != 'i') goto yy255;
yy340:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy341;
	if(yych != 'n') goto yy255;
yy341:
	yych = *++YYCURSOR;
	if(yych == 'G') goto yy342;
	if(yych != 'g') goto yy255;
yy342:
	yych = *++YYCURSOR;
	if(yych <= 'R') {
		if(yych != '-') goto yy255;
	} else {
		if(yych <= 'S') goto yy344;
		if(yych == 's') goto yy344;
		goto yy255;
	}
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy346;
	if(yych == 'p') goto yy346;
	goto yy255;
yy344:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy345;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy345;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy345;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy345:
	{in_before_sections = true; in_section = in_after_sections = false; goto scan_start;}
yy346:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy347;
	if(yych != 'r') goto yy255;
yy347:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy348;
	if(yych != 'e') goto yy255;
yy348:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy349;
	if(yych != 'f') goto yy255;
yy349:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy350;
	if(yych != 'i') goto yy255;
yy350:
	yych = *++YYCURSOR;
	if(yych == 'X') goto yy351;
	if(yych != 'x') goto yy255;
yy351:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy352;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy352;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy352;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy352:
	{YYCURSOR = parseMappingPrefix(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy353:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy383;
	if(yych == 'o') goto yy383;
	goto yy255;
yy354:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy381;
	if(yych == 'd') goto yy381;
	goto yy255;
yy355:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy368;
	if(yych == 't') goto yy368;
	goto yy255;
yy356:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy363;
	if(yych == 'c') goto yy363;
	goto yy255;
yy357:
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy358;
	if(yych != 'p') goto yy255;
yy358:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy359;
	if(yych != 'e') goto yy255;
yy359:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy360;
	if(yych != 'n') goto yy255;
yy360:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy361;
	if(yych != 'd') goto yy255;
yy361:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy362;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy362;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy362;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy362:
	{goto scan_start;}
yy363:
	yych = *++YYCURSOR;
	if(yych == 'H') goto yy364;
	if(yych != 'h') goto yy255;
yy364:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy365;
	if(yych != 'o') goto yy255;
yy365:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy366;
	if(yych != 'r') goto yy255;
yy366:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy367;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy367;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy367;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy367:
	{goto scan_start;}
yy368:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy369;
	if(yych != 'e') goto yy255;
yy369:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy370;
	if(yych != 'r') goto yy255;
yy370:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy255;
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy372;
	if(yych != 's') goto yy255;
yy372:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy373;
	if(yych != 'e') goto yy255;
yy373:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy374;
	if(yych != 'c') goto yy255;
yy374:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy375;
	if(yych != 't') goto yy255;
yy375:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy376;
	if(yych != 'i') goto yy255;
yy376:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy377;
	if(yych != 'o') goto yy255;
yy377:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy378;
	if(yych != 'n') goto yy255;
yy378:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy379;
	if(yych != 's') goto yy255;
yy379:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy380;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy380;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy380;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy380:
	{in_after_sections = true; in_section = in_before_sections = false; goto scan_start;}
yy381:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy382;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy382;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy382;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy382:
	{goto scan_start;}
yy383:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy384;
	if(yych != 'r') goto yy255;
yy384:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy385;
	if(yych != 't') goto yy255;
yy385:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy386;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy386;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy386;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy386:
	{goto scan_start;}
yy387:
	yych = *++YYCURSOR;
	if(yych <= 'T') {
		if(yych <= 'K') {
			if(yych == 'C') goto yy415;
			goto yy255;
		} else {
			if(yych <= 'L') goto yy416;
			if(yych <= 'S') goto yy255;
			goto yy413;
		}
	} else {
		if(yych <= 'k') {
			if(yych == 'c') goto yy415;
			goto yy255;
		} else {
			if(yych <= 'l') goto yy416;
			if(yych == 't') goto yy413;
			goto yy255;
		}
	}
yy388:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy399;
	if(yych == 'f') goto yy399;
	goto yy255;
yy389:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy390;
	if(yych != 'b') goto yy255;
yy390:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy391;
	if(yych != 's') goto yy255;
yy391:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy392;
	if(yych != 't') goto yy255;
yy392:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy393;
	if(yych != 'i') goto yy255;
yy393:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy394;
	if(yych != 't') goto yy255;
yy394:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy395;
	if(yych != 'u') goto yy255;
yy395:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy396;
	if(yych != 't') goto yy255;
yy396:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy397;
	if(yych != 'e') goto yy255;
yy397:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy398;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy398;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy398;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy398:
	{goto scan_start;}
yy399:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy400;
	if(yych != 't') goto yy255;
yy400:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy255;
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy402;
	if(yych != 'd') goto yy255;
yy402:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy403;
	if(yych != 'e') goto yy255;
yy403:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy404;
	if(yych != 'l') goto yy255;
yy404:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy405;
	if(yych != 'i') goto yy255;
yy405:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy406;
	if(yych != 'm') goto yy255;
yy406:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy407;
	if(yych != 'i') goto yy255;
yy407:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy408;
	if(yych != 't') goto yy255;
yy408:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy409;
	if(yych != 'e') goto yy255;
yy409:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy410;
	if(yych != 'r') goto yy255;
yy410:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy411;
	if(yych != 's') goto yy255;
yy411:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy412;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy412;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy412;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy412:
	{YYCURSOR = parseDelimiters(YYCURSOR, S_SOFTDELIMITSET); marker = YYCURSOR; goto scan_start;}
yy413:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 'R') {
		if(yych <= '"') {
			if(yych <= 0x000D) {
				if(yych <= 0x0008) goto yy255;
			} else {
				if(yych <= 0x001B) goto yy255;
				if(yych >= '!') goto yy255;
			}
		} else {
			if(yych <= ')') {
				if(yych <= '#') goto yy414;
				if(yych <= '\'') goto yy255;
			} else {
				if(yych != ';') goto yy255;
			}
		}
	} else {
		if(yych <= 'u') {
			if(yych <= 'V') {
				if(yych <= 'S') goto yy426;
				if(yych <= 'U') goto yy255;
				goto yy428;
			} else {
				if(yych == 's') goto yy426;
				goto yy255;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= 'v') goto yy428;
				if(yych <= 0x0084) goto yy255;
			} else {
				if(yych <= 0x2027) goto yy255;
				if(yych >= 0x202A) goto yy255;
			}
		}
	}
yy414:
	{YYCURSOR = parseSet(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy415:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy421;
	if(yych == 't') goto yy421;
	goto yy255;
yy416:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy417;
	if(yych != 'e') goto yy255;
yy417:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy418;
	if(yych != 'c') goto yy255;
yy418:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy419;
	if(yych != 't') goto yy255;
yy419:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy420;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy420;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy420;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy420:
	{goto scan_start;}
yy421:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy422;
	if(yych != 'i') goto yy255;
yy422:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy423;
	if(yych != 'o') goto yy255;
yy423:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy424;
	if(yych != 'n') goto yy255;
yy424:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy425;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy425;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy425;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy425:
	{in_section = true; in_before_sections = in_after_sections = false; goto scan_start;}
yy426:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy427;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy427;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy427;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy427:
	{goto scan_start;}
yy428:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy429;
	if(yych != 'a') goto yy255;
yy429:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy430;
	if(yych != 'r') goto yy255;
yy430:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy431;
	if(yych != 'i') goto yy255;
yy431:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy432;
	if(yych != 'a') goto yy255;
yy432:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy433;
	if(yych != 'b') goto yy255;
yy433:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy434;
	if(yych != 'l') goto yy255;
yy434:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy435;
	if(yych != 'e') goto yy255;
yy435:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy436;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy436;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy436;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy436:
	{goto scan_start;}
yy437:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy438;
	if(yych != 'f') goto yy255;
yy438:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy439;
	if(yych != 'o') goto yy255;
yy439:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy440;
	if(yych != 'r') goto yy255;
yy440:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy441;
	if(yych != 'e') goto yy255;
yy441:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy255;
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy443;
	if(yych != 's') goto yy255;
yy443:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy444;
	if(yych != 'e') goto yy255;
yy444:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy445;
	if(yych != 'c') goto yy255;
yy445:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy446;
	if(yych != 't') goto yy255;
yy446:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy447;
	if(yych != 'i') goto yy255;
yy447:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy448;
	if(yych != 'o') goto yy255;
yy448:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy449;
	if(yych != 'n') goto yy255;
yy449:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy450;
	if(yych != 's') goto yy255;
yy450:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy451;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy451;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy451;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy451:
	{in_before_sections = true; in_section = in_after_sections = false; goto scan_start;}
yy452:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy453;
	if(yych != 'e') goto yy255;
yy453:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy454;
	if(yych != 'f') goto yy255;
yy454:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy455;
	if(yych != 'e') goto yy255;
yy455:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy456;
	if(yych != 'r') goto yy255;
yy456:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy457;
	if(yych != 'r') goto yy255;
yy457:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy458;
	if(yych != 'e') goto yy255;
yy458:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy459;
	if(yych != 'd') goto yy255;
yy459:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy255;
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy461;
	if(yych != 't') goto yy255;
yy461:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy462;
	if(yych != 'a') goto yy255;
yy462:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy463;
	if(yych != 'r') goto yy255;
yy463:
	yych = *++YYCURSOR;
	if(yych == 'G') goto yy464;
	if(yych != 'g') goto yy255;
yy464:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy465;
	if(yych != 'e') goto yy255;
yy465:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy466;
	if(yych != 't') goto yy255;
yy466:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy467;
	if(yych != 's') goto yy255;
yy467:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy255;
			if(yych >= 0x000E) goto yy255;
		} else {
			if(yych <= ' ') goto yy468;
			if(yych != '#') goto yy255;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy468;
			if(yych != ';') goto yy255;
		} else {
			if(yych <= 0x0085) goto yy468;
			if(yych <= 0x2027) goto yy255;
			if(yych >= 0x202A) goto yy255;
		}
	}
yy468:
	{YYCURSOR = parsePreferredTargets(YYCURSOR); marker = YYCURSOR; goto scan_start;}
}


scan_end:
	marker = 0;
	return retval;
}

GPRE2C::GPRE2C() {
	filename = 0;
	locale = 0;
	codepage = 0;
	result = 0;
	option_vislcg_compat = false;
	in_before_sections = false;
	in_after_sections = false;
	in_section = false;
	marker = 0;
	last_entity = 0;
}

GPRE2C::~GPRE2C() {
	filename = 0;
	locale = 0;
	codepage = 0;
	result = 0;
}

void GPRE2C::setResult(CG3::Grammar *res) {
	result = res;
}

void GPRE2C::setCompatible(bool f) {
	option_vislcg_compat = f;
}

void GPRE2C::addRuleToGrammar(Rule *rule) {
	if (in_section) {
		result->addRule(rule, &result->rules);
	}
	else if (in_before_sections) {
		result->addRule(rule, &result->before_sections);
	}
	else if (in_after_sections) {
		result->addRule(rule, &result->after_sections);
	}
}

int GPRE2C::grammar_from_ufile(UFILE *input) {
	u_frewind(input);
	if (u_feof(input)) {
		u_fprintf(ux_stderr, "Error: Input is null - nothing to parse!\n");
		return -1;
	}
	if (!result) {
		u_fprintf(ux_stderr, "Error: No preallocated grammar provided - cannot continue!\n");
		return -1;
	}
	
	free_keywords();
	free_regexps();
	free_strings();

	int error = init_keywords();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_keywords returned %i!\n", error);
		return error;
	}

	error = init_regexps();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_regexps returned %i!\n", error);
		return error;
	}

	error = init_strings();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_strings returned %i!\n", error);
		return error;
	}

	UChar *buffer = new UChar[result->grammar_size+8];
	memset(buffer, 0, sizeof(UChar)*(result->grammar_size+8));
	u_file_read(buffer, result->grammar_size, input);
	
	UChar *offset = buffer;
	if (u_strlen(offset) > 0) {
		result->lines = 1;
		scan(offset);
	} else {
		u_fprintf(ux_stderr, "Error: Grammar file is empty - nothing to parse!\n");
		return -1;
	}
	
	delete buffer;
	free_regexps();
	free_strings();

	return 0;
}

int GPRE2C::parse_grammar_from_file(const char *fname, const char *loc, const char *cpage) {
	filename = fname;
	locale = loc;
	codepage = cpage;

	if (!result) {
		u_fprintf(ux_stderr, "Error: Cannot parse into nothing - hint: call setResult() before trying.\n");
		return -1;
	}

	struct stat _stat;
	int error = stat(filename, &_stat);

	if (error != 0) {
		u_fprintf(ux_stderr, "Error: Cannot stat %s due to error %d - bailing out!\n", filename, error);
		exit(1);
	} else {
		result->last_modified = (uint32_t)_stat.st_mtime;
		result->grammar_size = (uint32_t)_stat.st_size;
	}

	result->setName(filename);

	UFILE *grammar = u_fopen(filename, "r", locale, codepage);
	if (!grammar) {
		u_fprintf(ux_stderr, "Error: Error opening %s for reading!\n", filename);
		return -1;
	}
	
	error = grammar_from_ufile(grammar);
	if (error) {
		return error;
	}
	return 0;
}
