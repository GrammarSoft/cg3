/* Generated by re2c 0.11.0 on Wed Mar 14 04:08:39 2007 */
/*
 * Copyright (C) 2006, GrammarSoft Aps
 * and the VISL project at the University of Southern Denmark.
 * All Rights Reserved.
 *
 * The contents of this file are subject to the GrammarSoft Public
 * License Version 1.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.grammarsoft.com/GSPL or
 * http://visl.sdu.dk/GSPL.txt
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 */

#include "GPRE2C.h"

// This disables the warnings for \uXXXX style characters.
#ifdef WIN32
	#pragma warning( disable : 4428 4566 )
#endif

using namespace CG3;
using namespace CG3::Strings;
#define YYCURSOR        input
#define __WHITESPACE	"%[^ \t\x0A\x0B\x0C\x0D\u001C\u001D\u001E\u001F\u2028\u2029\x85]"



YYCTYPE *GPRE2C::skipline(YYCTYPE *input) {
skipline_start:

{
	YYCTYPE yych;

	yych = *YYCURSOR;
	if(yych <= 0x000C) {
		if(yych <= 0x0009) {
			if(yych >= 0x0001) goto yy6;
		} else {
			if(yych == 0x000B) goto yy6;
			goto yy4;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= 0x0084) goto yy6;
			goto yy4;
		} else {
			if(yych <= 0x2027) goto yy6;
			if(yych <= 0x2029) goto yy4;
			goto yy6;
		}
	}
	++YYCURSOR;
	{goto skipline_end;}
yy4:
	++YYCURSOR;
	{result->lines++; goto skipline_end;}
yy6:
	++YYCURSOR;
	{goto skipline_start;}
}

skipline_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseCompositeTag(YYCTYPE *input, Set *set) {
	CG3::CompositeTag *ctag = result->allocateCompositeTag();
	marker = YYCURSOR;

parseCompositeTag_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy14;
			} else {
				if(yych == 0x000A) goto yy12;
				goto yy25;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy12;
				if(yych <= 0x000D) goto yy25;
				goto yy14;
			} else {
				if(yych <= ' ') goto yy25;
				if(yych <= '"') goto yy14;
				goto yy17;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy14;
				if(yych <= '(') goto yy19;
				goto yy21;
			} else {
				if(yych == ';') goto yy23;
				goto yy14;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy16;
				if(yych <= 0x0084) goto yy14;
				goto yy12;
			} else {
				if(yych <= 0x2027) goto yy14;
				if(yych <= 0x2029) goto yy12;
				goto yy14;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy28;
			if(yych >= 0x000E) goto yy28;
		} else {
			if(yych <= ' ') goto yy11;
			if(yych != '#') goto yy28;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy11;
			if(yych != ';') goto yy28;
		} else {
			if(yych <= 0x0085) goto yy11;
			if(yych <= 0x2027) goto yy28;
			if(yych >= 0x202A) goto yy28;
		}
	}
yy11:
	{goto parseCompositeTag_end;}
yy12:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		result->lines++;
		goto parseCompositeTag_start;
		}
yy14:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy28;
yy15:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy16:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy27;
		goto yy28;
	} else {
		if(yych <= ')') goto yy27;
		if(yych == ';') goto yy27;
		goto yy28;
	}
yy17:
	++YYCURSOR;
	{
		YYCURSOR = skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy19:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ( on line %u!\n", result->lines); exit(1);}
yy21:
	++YYCURSOR;
	{goto parseCompositeTag_end;}
yy23:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Found ; before ) on line %u!\n", result->lines); exit(1);}
yy25:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parseCompositeTag_start;
		}
yy27:
	++YYCURSOR;
	yych = *YYCURSOR;
yy28:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy27;
			if(yych <= 0x000D) goto yy15;
			if(yych <= 0x001B) goto yy27;
			goto yy15;
		} else {
			if(yych == '#') goto yy15;
			if(yych <= '\'') goto yy27;
			goto yy15;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy15;
			if(yych <= '[') goto yy27;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy27;
				goto yy15;
			} else {
				if(yych <= 0x2027) goto yy27;
				if(yych <= 0x2029) goto yy15;
				goto yy27;
			}
		}
	}
yy29:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy27;
			goto yy15;
		} else {
			if(yych <= 0x001B) goto yy27;
			if(yych <= ' ') goto yy15;
			goto yy27;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy29;
			if(yych <= 0x0084) goto yy27;
			goto yy15;
		} else {
			if(yych <= 0x2027) goto yy27;
			if(yych <= 0x2029) goto yy15;
			goto yy27;
		}
	}
}


parseCompositeTag_end:
	if (ctag->tags_map.empty()) {
		u_fprintf(ux_stderr, "Error: Empty () on line %u!\n", result->lines);
		exit(1);
	}
	result->addCompositeTagToSet(set, ctag);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseInlineSet(YYCTYPE *input, Set **ret_set) {
	CG3::Set *curset = result->allocateSet();
	curset->line = result->lines;
	curset->setName((uint32_t)0);
	CG3::CompositeTag *ctag = result->allocateCompositeTag();
	marker = YYCURSOR;

parseInlineSet_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy37;
			} else {
				if(yych == 0x000A) goto yy35;
				goto yy48;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy35;
				if(yych <= 0x000D) goto yy48;
				goto yy37;
			} else {
				if(yych <= ' ') goto yy48;
				if(yych <= '"') goto yy37;
				goto yy40;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy37;
				if(yych <= '(') goto yy42;
				goto yy44;
			} else {
				if(yych == ';') goto yy46;
				goto yy37;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy39;
				if(yych <= 0x0084) goto yy37;
				goto yy35;
			} else {
				if(yych <= 0x2027) goto yy37;
				if(yych <= 0x2029) goto yy35;
				goto yy37;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy51;
			if(yych >= 0x000E) goto yy51;
		} else {
			if(yych <= ' ') goto yy34;
			if(yych != '#') goto yy51;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy34;
			if(yych != ';') goto yy51;
		} else {
			if(yych <= 0x0085) goto yy34;
			if(yych <= 0x2027) goto yy51;
			if(yych >= 0x202A) goto yy51;
		}
	}
yy34:
	{goto parseInlineSet_end;}
yy35:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseInlineSet_start;}
yy37:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy51;
yy38:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseInlineSet_start;
		}
yy39:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy50;
		goto yy51;
	} else {
		if(yych <= ')') goto yy50;
		if(yych == ';') goto yy50;
		goto yy51;
	}
yy40:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseInlineSet_start;}
yy42:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ( on line %u!\n", result->lines); exit(1);}
yy44:
	++YYCURSOR;
	{goto parseInlineSet_end;}
yy46:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Found ; before ) on line %u!\n", result->lines); exit(1);}
yy48:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parseInlineSet_start;
		}
yy50:
	++YYCURSOR;
	yych = *YYCURSOR;
yy51:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy50;
			if(yych <= 0x000D) goto yy38;
			if(yych <= 0x001B) goto yy50;
			goto yy38;
		} else {
			if(yych == '#') goto yy38;
			if(yych <= '\'') goto yy50;
			goto yy38;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy38;
			if(yych <= '[') goto yy50;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy50;
				goto yy38;
			} else {
				if(yych <= 0x2027) goto yy50;
				if(yych <= 0x2029) goto yy38;
				goto yy50;
			}
		}
	}
yy52:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy50;
			goto yy38;
		} else {
			if(yych <= 0x001B) goto yy50;
			if(yych <= ' ') goto yy38;
			goto yy50;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy52;
			if(yych <= 0x0084) goto yy50;
			goto yy38;
		} else {
			if(yych <= 0x2027) goto yy50;
			if(yych <= 0x2029) goto yy38;
			goto yy50;
		}
	}
}


parseInlineSet_end:
	result->addCompositeTagToSet(curset, ctag);
	result->addSet(curset);
	*ret_set = curset;
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseSetList(YYCTYPE *input, Set *set) {
	bool want_set = true;
	marker = YYCURSOR;

parseSetList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= ',') {
		if(yych <= 0x001B) {
			if(yych <= 0x000A) {
				if(yych <= 0x0000) goto yy56;
				if(yych <= 0x0008) goto yy64;
				if(yych <= 0x0009) goto yy71;
				goto yy58;
			} else {
				if(yych == 0x000C) goto yy58;
				if(yych <= 0x000D) goto yy71;
				goto yy64;
			}
		} else {
			if(yych <= '#') {
				if(yych <= ' ') goto yy71;
				if(yych <= '!') goto yy60;
				if(yych <= '"') goto yy64;
				goto yy65;
			} else {
				if(yych <= '(') {
					if(yych <= '\'') goto yy64;
					goto yy67;
				} else {
					if(yych <= ')') goto yy69;
					if(yych <= '+') goto yy60;
					goto yy64;
				}
			}
		}
	} else {
		if(yych <= '^') {
			if(yych <= 'N') {
				if(yych <= '-') goto yy60;
				if(yych == ';') goto yy73;
				goto yy64;
			} else {
				if(yych <= '[') {
					if(yych <= 'O') goto yy62;
					goto yy64;
				} else {
					if(yych <= '\\') goto yy66;
					if(yych <= ']') goto yy64;
					goto yy60;
				}
			}
		} else {
			if(yych <= '|') {
				if(yych == 'o') goto yy62;
				if(yych <= '{') goto yy64;
				goto yy60;
			} else {
				if(yych <= 0x0085) {
					if(yych <= 0x0084) goto yy64;
					goto yy58;
				} else {
					if(yych <= 0x2027) goto yy64;
					if(yych <= 0x2029) goto yy58;
					goto yy64;
				}
			}
		}
	}
yy56:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy76;
			if(yych >= 0x000E) goto yy76;
		} else {
			if(yych <= ' ') goto yy57;
			if(yych <= '\'') goto yy76;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy76;
		} else {
			if(yych <= 0x0085) goto yy57;
			if(yych <= 0x2027) goto yy76;
			if(yych >= 0x202A) goto yy76;
		}
	}
yy57:
	{goto parseSetList_end;}
yy58:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseSetList_start;}
yy60:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy76;
			if(yych >= 0x000E) goto yy76;
		} else {
			if(yych <= ' ') goto yy61;
			if(yych <= '\'') goto yy76;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy76;
		} else {
			if(yych <= 0x0085) goto yy61;
			if(yych <= 0x2027) goto yy76;
			if(yych >= 0x202A) goto yy76;
		}
	}
yy61:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		if (want_set) {
			u_fprintf(ux_stderr, "Error: Missing set for operator %S on line %u!\n", buffer, result->lines);
			exit(1);
		}
		uint32_t set_op = ux_isSetOp(buffer);
		set->set_ops.push_back(set_op);
		want_set = true;
		marker = YYCURSOR;
		goto parseSetList_start;
		}
yy62:
	++YYCURSOR;
	if((yych = *YYCURSOR) == 'R') goto yy79;
	if(yych == 'r') goto yy79;
	goto yy76;
yy63:
	{
		if (!want_set) {
			return YYCURSOR;
		}
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		uint32_t set_hash = hash_sdbm_uchar(buffer, 0);
		if (result->set_alias.find(set_hash) != result->set_alias.end()) {
			set_hash = result->set_alias[set_hash];
		}
		set_hash = result->getSet(set_hash)->hash;
		set->sets.push_back(set_hash);
		delete buffer;
		marker = YYCURSOR;
		want_set = false;
		goto parseSetList_start;
		}
yy64:
	yych = *++YYCURSOR;
	goto yy76;
yy65:
	yych = *++YYCURSOR;
	goto yy76;
yy66:
	yych = *++YYCURSOR;
	if(yych <= '\'') goto yy76;
	if(yych <= ')') goto yy75;
	if(yych == ';') goto yy75;
	goto yy76;
yy67:
	++YYCURSOR;
	{
		if (!want_set) {
			return YYCURSOR;
		}
		Set *ret_set = 0;
		YYCURSOR = parseInlineSet(YYCURSOR, &ret_set);
		uint32_t set_hash = ret_set->hash;
		if (result->set_alias.find(set_hash) != result->set_alias.end()) {
			set_hash = result->set_alias[set_hash];
		}
		set->sets.push_back(set_hash);
		marker = YYCURSOR;
		want_set = false;
		goto parseSetList_start;
		}
yy69:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ) on line %u!\n", result->lines); exit(1);}
yy71:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseSetList_start;}
yy73:
	++YYCURSOR;
	{goto parseSetList_end;}
yy75:
	++YYCURSOR;
	yych = *YYCURSOR;
yy76:
	if(yych <= ':') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy75;
			if(yych <= 0x000D) goto yy63;
			goto yy75;
		} else {
			if(yych <= ' ') goto yy63;
			if(yych <= '\'') goto yy75;
			if(yych <= ')') goto yy63;
			goto yy75;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy63;
			if(yych != '\\') goto yy75;
		} else {
			if(yych <= 0x0085) goto yy63;
			if(yych <= 0x2027) goto yy75;
			if(yych <= 0x2029) goto yy63;
			goto yy75;
		}
	}
yy77:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy75;
			goto yy63;
		} else {
			if(yych <= 0x001B) goto yy75;
			if(yych <= ' ') goto yy63;
			goto yy75;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy77;
			if(yych <= 0x0084) goto yy75;
			goto yy63;
		} else {
			if(yych <= 0x2027) goto yy75;
			if(yych <= 0x2029) goto yy63;
			goto yy75;
		}
	}
yy79:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy76;
			if(yych <= 0x000D) goto yy61;
			goto yy76;
		} else {
			if(yych <= ' ') goto yy61;
			if(yych <= '\'') goto yy76;
			goto yy61;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych == ';') goto yy61;
			goto yy76;
		} else {
			if(yych <= 0x0085) goto yy61;
			if(yych <= 0x2027) goto yy76;
			if(yych <= 0x2029) goto yy61;
			goto yy76;
		}
	}
}


parseSetList_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseTagList(YYCTYPE *input, Set *set) {
	marker = YYCURSOR;

parseTagList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy86;
			} else {
				if(yych == 0x000A) goto yy84;
				goto yy97;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy84;
				if(yych <= 0x000D) goto yy97;
				goto yy86;
			} else {
				if(yych <= ' ') goto yy97;
				if(yych <= '"') goto yy86;
				goto yy93;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy86;
				if(yych <= '(') goto yy89;
				goto yy91;
			} else {
				if(yych == ';') goto yy95;
				goto yy86;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy88;
				if(yych <= 0x0084) goto yy86;
				goto yy84;
			} else {
				if(yych <= 0x2027) goto yy86;
				if(yych <= 0x2029) goto yy84;
				goto yy86;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy100;
			if(yych >= 0x000E) goto yy100;
		} else {
			if(yych <= ' ') goto yy83;
			if(yych != '#') goto yy100;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy83;
			if(yych != ';') goto yy100;
		} else {
			if(yych <= 0x0085) goto yy83;
			if(yych <= 0x2027) goto yy100;
			if(yych >= 0x202A) goto yy100;
		}
	}
yy83:
	{goto parseTagList_end;}
yy84:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		result->lines++;
		goto parseTagList_start;
		}
yy86:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy100;
yy87:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::CompositeTag *ctag = result->allocateCompositeTag();
		CG3::Tag *tag = result->allocateTag(buffer);
		result->addTagToCompositeTag(tag, ctag);
		result->addCompositeTagToSet(set, ctag);
		delete buffer;
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy88:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy99;
		goto yy100;
	} else {
		if(yych <= ')') goto yy99;
		if(yych == ';') goto yy99;
		goto yy100;
	}
yy89:
	++YYCURSOR;
	{
		YYCURSOR = parseCompositeTag(YYCURSOR, set);
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy91:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Mismatched ) on line %u!\n", result->lines); exit(1);}
yy93:
	++YYCURSOR;
	{
		YYCURSOR = skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy95:
	++YYCURSOR;
	{goto parseTagList_end;}
yy97:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parseTagList_start;
		}
yy99:
	++YYCURSOR;
	yych = *YYCURSOR;
yy100:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy99;
			if(yych <= 0x000D) goto yy87;
			if(yych <= 0x001B) goto yy99;
			goto yy87;
		} else {
			if(yych == '#') goto yy87;
			if(yych <= '\'') goto yy99;
			goto yy87;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy87;
			if(yych <= '[') goto yy99;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy99;
				goto yy87;
			} else {
				if(yych <= 0x2027) goto yy99;
				if(yych <= 0x2029) goto yy87;
				goto yy99;
			}
		}
	}
yy101:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy99;
			goto yy87;
		} else {
			if(yych <= 0x001B) goto yy99;
			if(yych <= ' ') goto yy87;
			goto yy99;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy101;
			if(yych <= 0x0084) goto yy99;
			goto yy87;
		} else {
			if(yych <= 0x2027) goto yy99;
			if(yych <= 0x2029) goto yy87;
			goto yy99;
		}
	}
}


parseTagList_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseMappingList(YYCTYPE *input, std::list<uint32_t> *taglist) {
	marker = YYCURSOR;

parseMappingList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy109;
			} else {
				if(yych == 0x000A) goto yy107;
				goto yy118;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy107;
				if(yych <= 0x000D) goto yy118;
				goto yy109;
			} else {
				if(yych <= ' ') goto yy118;
				if(yych <= '"') goto yy109;
				goto yy114;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy109;
				if(yych <= '(') goto yy118;
				goto yy112;
			} else {
				if(yych == ';') goto yy116;
				goto yy109;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy111;
				if(yych <= 0x0084) goto yy109;
				goto yy107;
			} else {
				if(yych <= 0x2027) goto yy109;
				if(yych <= 0x2029) goto yy107;
				goto yy109;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy121;
			if(yych >= 0x000E) goto yy121;
		} else {
			if(yych <= ' ') goto yy106;
			if(yych != '#') goto yy121;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy106;
			if(yych != ';') goto yy121;
		} else {
			if(yych <= 0x0085) goto yy106;
			if(yych <= 0x2027) goto yy121;
			if(yych >= 0x202A) goto yy121;
		}
	}
yy106:
	{goto parseMappingList_end;}
yy107:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		result->lines++;
		goto parseMappingList_start;
		}
yy109:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy121;
yy110:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		CG3::Tag *tag = result->allocateTag(buffer);
		tag->parseTag(buffer);
		tag->rehash();
		result->addTag(tag);
		taglist->push_back(tag->hash);
		delete buffer;
		marker = YYCURSOR;
		goto parseMappingList_start;
		}
yy111:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy120;
		goto yy121;
	} else {
		if(yych <= ')') goto yy120;
		if(yych == ';') goto yy120;
		goto yy121;
	}
yy112:
	++YYCURSOR;
	{goto parseMappingList_end;}
yy114:
	++YYCURSOR;
	{
		YYCURSOR = skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parseMappingList_start;
		}
yy116:
	++YYCURSOR;
	{goto parseMappingList_end;}
yy118:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parseMappingList_start;
		}
yy120:
	++YYCURSOR;
	yych = *YYCURSOR;
yy121:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy120;
			if(yych <= 0x000D) goto yy110;
			if(yych <= 0x001B) goto yy120;
			goto yy110;
		} else {
			if(yych == '#') goto yy110;
			if(yych <= '\'') goto yy120;
			goto yy110;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy110;
			if(yych <= '[') goto yy120;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy120;
				goto yy110;
			} else {
				if(yych <= 0x2027) goto yy120;
				if(yych <= 0x2029) goto yy110;
				goto yy120;
			}
		}
	}
yy122:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy120;
			goto yy110;
		} else {
			if(yych <= 0x001B) goto yy120;
			if(yych <= ' ') goto yy110;
			goto yy120;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy122;
			if(yych <= 0x0084) goto yy120;
			goto yy110;
		} else {
			if(yych <= 0x2027) goto yy120;
			if(yych <= 0x2029) goto yy110;
			goto yy120;
		}
	}
}


parseMappingList_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseDelimiters(YYCTYPE *input, STRINGS which) {
	CG3::Set *curset = result->allocateSet();
	curset->setName(stringbits[which]);
	curset->line = result->lines;

parseDelimiters_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= ':') {
		if(yych <= 0x000B) {
			if(yych <= 0x0000) goto yy126;
			if(yych == 0x000A) goto yy128;
			goto yy136;
		} else {
			if(yych <= 0x000C) goto yy128;
			if(yych == '#') goto yy132;
			goto yy136;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy134;
			if(yych == '=') goto yy130;
			goto yy136;
		} else {
			if(yych <= 0x0085) goto yy128;
			if(yych <= 0x2027) goto yy136;
			if(yych <= 0x2029) goto yy128;
			goto yy136;
		}
	}
yy126:
	++YYCURSOR;
	{goto parseDelimiters_end;}
yy128:
	++YYCURSOR;
	{result->lines++; goto parseDelimiters_start;}
yy130:
	++YYCURSOR;
	{YYCURSOR = parseTagList(YYCURSOR, curset); goto parseDelimiters_end;}
yy132:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); goto parseDelimiters_start;}
yy134:
	++YYCURSOR;
	{goto parseDelimiters_end;}
yy136:
	++YYCURSOR;
	{goto parseDelimiters_start;}
}


parseDelimiters_end:
	result->addSet(curset);
	if (which == S_DELIMITSET) {
		result->delimiters = curset;
	}
	else if (which == S_SOFTDELIMITSET) {
		result->soft_delimiters = curset;
	}
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseMapAddReplaceAppend(YYCTYPE *input, KEYWORDS which) {
	CG3::Rule *rule = result->allocateRule();
	rule->line = result->lines;
	rule->type = which;

	UChar wform[256];
	if (marker[0] == '"' && marker[1] == '<') {
		u_sscanf(marker, __WHITESPACE, &wform);
	}
	else if (last_entity[0] == '"' && last_entity[1] == '<') {
		u_sscanf(last_entity, __WHITESPACE, &wform);
	}
	if (wform[0] == '"' && wform[1] == '<' && u_strlen(wform) < 256 && wform[u_strlen(wform)] == 0) {
		Tag *wformt = result->allocateTag(wform);
		rule->wordform = wformt->rehash();
		result->addTag(wformt);
	}

parseMapAddReplaceAppend_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '\'') {
		if(yych <= 0x000B) {
			if(yych <= 0x0000) goto yy140;
			if(yych == 0x000A) goto yy142;
			goto yy150;
		} else {
			if(yych <= 0x000C) goto yy142;
			if(yych == '#') goto yy144;
			goto yy150;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= '(') goto yy146;
			if(yych == ';') goto yy148;
			goto yy150;
		} else {
			if(yych <= 0x0085) goto yy142;
			if(yych <= 0x2027) goto yy150;
			if(yych <= 0x2029) goto yy142;
			goto yy150;
		}
	}
yy140:
	++YYCURSOR;
	{goto parseMapAddReplaceAppend_end;}
yy142:
	++YYCURSOR;
	{result->lines++; goto parseMapAddReplaceAppend_start;}
yy144:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); goto parseMapAddReplaceAppend_start;}
yy146:
	++YYCURSOR;
	{
			if (rule->maplist.empty()) {
				YYCURSOR = parseMappingList(YYCURSOR, &rule->maplist);
			}
		}
yy148:
	++YYCURSOR;
	{goto parseMapAddReplaceAppend_end;}
yy150:
	++YYCURSOR;
	{goto parseMapAddReplaceAppend_start;}
}


parseMapAddReplaceAppend_end:
	if (rule->maplist.empty()) {
		u_fprintf(ux_stderr, "Error: Mapping-type rule on line %u had no list of tags to work with!\n", result->lines);
		exit(0);
	}

	uint32_t rset = 0;
	CG3::Set *curset = result->allocateSet();
	curset->line = result->lines;
	// ToDo: Generate a unique set name somehow faster.
	curset->setName(hash_sdbm_uchar(input, result->lines+which));
	YYCURSOR = parseSetList(YYCURSOR, curset);
	if (curset->sets.size() == 1) {
		rset = curset->sets.at(0);
		result->destroySet(curset);
		curset = result->getSet(rset);
	}
	else {
		rset = curset->rehash();
	}
	rule->target = rset;
	result->addSet(curset);

	addRuleToGrammar(rule);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseMappingPrefix(YYCTYPE *input) {
parseMappingPrefix_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= ':') {
		if(yych <= 0x000B) {
			if(yych <= 0x0000) goto yy154;
			if(yych == 0x000A) goto yy156;
			goto yy164;
		} else {
			if(yych <= 0x000C) goto yy156;
			if(yych == '#') goto yy160;
			goto yy164;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy162;
			if(yych == '=') goto yy158;
			goto yy164;
		} else {
			if(yych <= 0x0085) goto yy156;
			if(yych <= 0x2027) goto yy164;
			if(yych <= 0x2029) goto yy156;
			goto yy164;
		}
	}
yy154:
	++YYCURSOR;
	{goto parseMappingPrefix_end;}
yy156:
	++YYCURSOR;
	{result->lines++; goto parseMappingPrefix_start;}
yy158:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy160:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); goto parseMappingPrefix_start;}
yy162:
	++YYCURSOR;
	{goto parseMappingPrefix_end;}
yy164:
	++YYCURSOR;
	{goto parseMappingPrefix_start;}
}


parseMappingPrefix_middle:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy172;
			} else {
				if(yych == 0x000A) goto yy170;
				goto yy179;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy170;
				if(yych <= 0x000D) goto yy179;
				goto yy172;
			} else {
				if(yych <= ' ') goto yy179;
				if(yych <= '"') goto yy172;
				goto yy175;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy172;
				goto yy179;
			} else {
				if(yych == ';') goto yy177;
				goto yy172;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy174;
				if(yych <= 0x0084) goto yy172;
				goto yy170;
			} else {
				if(yych <= 0x2027) goto yy172;
				if(yych <= 0x2029) goto yy170;
				goto yy172;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy182;
			if(yych >= 0x000E) goto yy182;
		} else {
			if(yych <= ' ') goto yy169;
			if(yych != '#') goto yy182;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy169;
			if(yych != ';') goto yy182;
		} else {
			if(yych <= 0x0085) goto yy169;
			if(yych <= 0x2027) goto yy182;
			if(yych >= 0x202A) goto yy182;
		}
	}
yy169:
	{goto parseMappingPrefix_end;}
yy170:
	++YYCURSOR;
	{result->lines++; marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy172:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy182;
yy173:
	{result->mapping_prefix = marker[0]; goto parseMappingPrefix_middle;}
yy174:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy181;
		goto yy182;
	} else {
		if(yych <= ')') goto yy181;
		if(yych == ';') goto yy181;
		goto yy182;
	}
yy175:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy177:
	++YYCURSOR;
	{goto parseMappingPrefix_end;}
yy179:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseMappingPrefix_middle;}
yy181:
	++YYCURSOR;
	yych = *YYCURSOR;
yy182:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy181;
			if(yych <= 0x000D) goto yy173;
			if(yych <= 0x001B) goto yy181;
			goto yy173;
		} else {
			if(yych == '#') goto yy173;
			if(yych <= '\'') goto yy181;
			goto yy173;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy173;
			if(yych <= '[') goto yy181;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy181;
				goto yy173;
			} else {
				if(yych <= 0x2027) goto yy181;
				if(yych <= 0x2029) goto yy173;
				goto yy181;
			}
		}
	}
yy183:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy181;
			goto yy173;
		} else {
			if(yych <= 0x001B) goto yy181;
			if(yych <= ' ') goto yy173;
			goto yy181;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy183;
			if(yych <= 0x0084) goto yy181;
			goto yy173;
		} else {
			if(yych <= 0x2027) goto yy181;
			if(yych <= 0x2029) goto yy173;
			goto yy181;
		}
	}
}

parseMappingPrefix_end:
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseList(YYCTYPE *input) {
	marker = YYCURSOR;
	CG3::Set *curset = result->allocateSet();
	curset->line = result->lines;

parseList_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '\'') {
		if(yych <= 0x000C) {
			if(yych <= 0x0009) {
				if(yych <= 0x0000) goto yy187;
				if(yych <= 0x0008) goto yy195;
				goto yy200;
			} else {
				if(yych == 0x000B) goto yy200;
				goto yy189;
			}
		} else {
			if(yych <= ' ') {
				if(yych <= 0x000D) goto yy200;
				if(yych <= 0x001B) goto yy195;
				goto yy200;
			} else {
				if(yych == '#') goto yy193;
				goto yy195;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ';') {
				if(yych <= ')') goto yy200;
				if(yych <= ':') goto yy195;
				goto yy198;
			} else {
				if(yych == '=') goto yy191;
				goto yy195;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy197;
				if(yych <= 0x0084) goto yy195;
				goto yy189;
			} else {
				if(yych <= 0x2027) goto yy195;
				if(yych <= 0x2029) goto yy189;
				goto yy195;
			}
		}
	}
yy187:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy203;
			if(yych >= 0x000E) goto yy203;
		} else {
			if(yych <= ' ') goto yy188;
			if(yych <= '\'') goto yy203;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy203;
		} else {
			if(yych <= 0x0085) goto yy188;
			if(yych <= 0x2027) goto yy203;
			if(yych >= 0x202A) goto yy203;
		}
	}
yy188:
	{goto parseList_end;}
yy189:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseList_start;}
yy191:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy203;
			if(yych >= 0x000E) goto yy203;
		} else {
			if(yych <= ' ') goto yy192;
			if(yych <= '\'') goto yy203;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy203;
		} else {
			if(yych <= 0x0085) goto yy192;
			if(yych <= 0x2027) goto yy203;
			if(yych >= 0x202A) goto yy203;
		}
	}
yy192:
	{YYCURSOR = parseTagList(YYCURSOR, curset); marker = YYCURSOR; goto parseList_end;}
yy193:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy203;
			if(yych >= 0x000E) goto yy203;
		} else {
			if(yych <= ' ') goto yy194;
			if(yych <= '\'') goto yy203;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy203;
		} else {
			if(yych <= 0x0085) goto yy194;
			if(yych <= 0x2027) goto yy203;
			if(yych >= 0x202A) goto yy203;
		}
	}
yy194:
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseList_start;}
yy195:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy203;
yy196:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		curset->setName(buffer);
		delete buffer;
		marker = YYCURSOR;
		goto parseList_start;
		}
yy197:
	yych = *++YYCURSOR;
	if(yych <= '\'') goto yy203;
	if(yych <= ')') goto yy202;
	if(yych == ';') goto yy202;
	goto yy203;
yy198:
	++YYCURSOR;
	{goto parseList_end;}
yy200:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseList_start;}
yy202:
	++YYCURSOR;
	yych = *YYCURSOR;
yy203:
	if(yych <= ':') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy202;
			if(yych <= 0x000D) goto yy196;
			goto yy202;
		} else {
			if(yych <= ' ') goto yy196;
			if(yych <= '\'') goto yy202;
			if(yych <= ')') goto yy196;
			goto yy202;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy196;
			if(yych != '\\') goto yy202;
		} else {
			if(yych <= 0x0085) goto yy196;
			if(yych <= 0x2027) goto yy202;
			if(yych <= 0x2029) goto yy196;
			goto yy202;
		}
	}
yy204:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy202;
			goto yy196;
		} else {
			if(yych <= 0x001B) goto yy202;
			if(yych <= ' ') goto yy196;
			goto yy202;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy204;
			if(yych <= 0x0084) goto yy202;
			goto yy196;
		} else {
			if(yych <= 0x2027) goto yy202;
			if(yych <= 0x2029) goto yy196;
			goto yy202;
		}
	}
}


parseList_end:
	result->addSet(curset);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parseSet(YYCTYPE *input) {
	marker = YYCURSOR;
	CG3::Set *curset = result->allocateSet();
	curset->line = result->lines;
	if (result->lines == 1333) {
		input=input;
	}

parseSet_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '\'') {
		if(yych <= 0x000C) {
			if(yych <= 0x0009) {
				if(yych <= 0x0000) goto yy208;
				if(yych <= 0x0008) goto yy216;
				goto yy221;
			} else {
				if(yych == 0x000B) goto yy221;
				goto yy210;
			}
		} else {
			if(yych <= ' ') {
				if(yych <= 0x000D) goto yy221;
				if(yych <= 0x001B) goto yy216;
				goto yy221;
			} else {
				if(yych == '#') goto yy214;
				goto yy216;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ';') {
				if(yych <= ')') goto yy221;
				if(yych <= ':') goto yy216;
				goto yy219;
			} else {
				if(yych == '=') goto yy212;
				goto yy216;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy218;
				if(yych <= 0x0084) goto yy216;
				goto yy210;
			} else {
				if(yych <= 0x2027) goto yy216;
				if(yych <= 0x2029) goto yy210;
				goto yy216;
			}
		}
	}
yy208:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy224;
			if(yych >= 0x000E) goto yy224;
		} else {
			if(yych <= ' ') goto yy209;
			if(yych <= '\'') goto yy224;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy224;
		} else {
			if(yych <= 0x0085) goto yy209;
			if(yych <= 0x2027) goto yy224;
			if(yych >= 0x202A) goto yy224;
		}
	}
yy209:
	{goto parseSet_end;}
yy210:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto parseSet_start;}
yy212:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy224;
			if(yych >= 0x000E) goto yy224;
		} else {
			if(yych <= ' ') goto yy213;
			if(yych <= '\'') goto yy224;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy224;
		} else {
			if(yych <= 0x0085) goto yy213;
			if(yych <= 0x2027) goto yy224;
			if(yych >= 0x202A) goto yy224;
		}
	}
yy213:
	{YYCURSOR = parseSetList(YYCURSOR, curset); marker = YYCURSOR; goto parseSet_end;}
yy214:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ')') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy224;
			if(yych >= 0x000E) goto yy224;
		} else {
			if(yych <= ' ') goto yy215;
			if(yych <= '\'') goto yy224;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych != ';') goto yy224;
		} else {
			if(yych <= 0x0085) goto yy215;
			if(yych <= 0x2027) goto yy224;
			if(yych >= 0x202A) goto yy224;
		}
	}
yy215:
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto parseSet_start;}
yy216:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy224;
yy217:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		curset->setName(buffer);
		delete buffer;
		marker = YYCURSOR;
		goto parseSet_start;
		}
yy218:
	yych = *++YYCURSOR;
	if(yych <= '\'') goto yy224;
	if(yych <= ')') goto yy223;
	if(yych == ';') goto yy223;
	goto yy224;
yy219:
	++YYCURSOR;
	{goto parseSet_end;}
yy221:
	++YYCURSOR;
	{marker = YYCURSOR; goto parseSet_start;}
yy223:
	++YYCURSOR;
	yych = *YYCURSOR;
yy224:
	if(yych <= ':') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy223;
			if(yych <= 0x000D) goto yy217;
			goto yy223;
		} else {
			if(yych <= ' ') goto yy217;
			if(yych <= '\'') goto yy223;
			if(yych <= ')') goto yy217;
			goto yy223;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ';') goto yy217;
			if(yych != '\\') goto yy223;
		} else {
			if(yych <= 0x0085) goto yy217;
			if(yych <= 0x2027) goto yy223;
			if(yych <= 0x2029) goto yy217;
			goto yy223;
		}
	}
yy225:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy223;
			goto yy217;
		} else {
			if(yych <= 0x001B) goto yy223;
			if(yych <= ' ') goto yy217;
			goto yy223;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy225;
			if(yych <= 0x0084) goto yy223;
			goto yy217;
		} else {
			if(yych <= 0x2027) goto yy223;
			if(yych <= 0x2029) goto yy217;
			goto yy223;
		}
	}
}


parseSet_end:
	if (curset->sets.size() == 1) {
		uint32_t res = curset->sets.at(0);
		result->set_alias[hash_sdbm_uchar(curset->name, 0)] = res;
		result->destroySet(curset);
		curset = result->getSet(res);
	}
	result->addSet(curset);
	return YYCURSOR;
}

YYCTYPE *GPRE2C::parsePreferredTargets(YYCTYPE *input) {
	marker = YYCURSOR;

parsePreferredTargets_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= '#') {
		if(yych <= 0x000B) {
			if(yych <= 0x0008) {
				if(yych >= 0x0001) goto yy233;
			} else {
				if(yych == 0x000A) goto yy231;
				goto yy244;
			}
		} else {
			if(yych <= 0x001B) {
				if(yych <= 0x000C) goto yy231;
				if(yych <= 0x000D) goto yy244;
				goto yy233;
			} else {
				if(yych <= ' ') goto yy244;
				if(yych <= '"') goto yy233;
				goto yy240;
			}
		}
	} else {
		if(yych <= '[') {
			if(yych <= ')') {
				if(yych <= '\'') goto yy233;
				if(yych <= '(') goto yy236;
				goto yy238;
			} else {
				if(yych == ';') goto yy242;
				goto yy233;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= '\\') goto yy235;
				if(yych <= 0x0084) goto yy233;
				goto yy231;
			} else {
				if(yych <= 0x2027) goto yy233;
				if(yych <= 0x2029) goto yy231;
				goto yy233;
			}
		}
	}
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy247;
			if(yych >= 0x000E) goto yy247;
		} else {
			if(yych <= ' ') goto yy230;
			if(yych != '#') goto yy247;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy230;
			if(yych != ';') goto yy247;
		} else {
			if(yych <= 0x0085) goto yy230;
			if(yych <= 0x2027) goto yy247;
			if(yych >= 0x202A) goto yy247;
		}
	}
yy230:
	{goto parsePreferredTargets_end;}
yy231:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		result->lines++;
		goto parsePreferredTargets_start;
		}
yy233:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy247;
yy234:
	{
		size_t length = (YYCURSOR - marker)+1;
		YYCTYPE *buffer = new YYCTYPE[length];
		buffer[length-1] = 0;
		u_strncpy(buffer, marker, (int32_t)length-1);
		if (!(buffer[0] == '=' && u_strlen(buffer) == 1)) {
			result->addPreferredTarget(buffer);
		}
		delete buffer;
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy235:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy246;
		goto yy247;
	} else {
		if(yych <= ')') goto yy246;
		if(yych == ';') goto yy246;
		goto yy247;
	}
yy236:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected ( on line %u!\n", result->lines); exit(1);}
yy238:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected ) on line %u!\n", result->lines); exit(1);}
yy240:
	++YYCURSOR;
	{
		YYCURSOR = skipline(YYCURSOR);
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy242:
	++YYCURSOR;
	{goto parsePreferredTargets_end;}
yy244:
	++YYCURSOR;
	{
		marker = YYCURSOR;
		goto parsePreferredTargets_start;
		}
yy246:
	++YYCURSOR;
	yych = *YYCURSOR;
yy247:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy246;
			if(yych <= 0x000D) goto yy234;
			if(yych <= 0x001B) goto yy246;
			goto yy234;
		} else {
			if(yych == '#') goto yy234;
			if(yych <= '\'') goto yy246;
			goto yy234;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy234;
			if(yych <= '[') goto yy246;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy246;
				goto yy234;
			} else {
				if(yych <= 0x2027) goto yy246;
				if(yych <= 0x2029) goto yy234;
				goto yy246;
			}
		}
	}
yy248:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy246;
			goto yy234;
		} else {
			if(yych <= 0x001B) goto yy246;
			if(yych <= ' ') goto yy234;
			goto yy246;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy248;
			if(yych <= 0x0084) goto yy246;
			goto yy234;
		} else {
			if(yych <= 0x2027) goto yy246;
			if(yych <= 0x2029) goto yy234;
			goto yy246;
		}
	}
}


parsePreferredTargets_end:
	if (result->preferred_targets.empty()) {
		u_fprintf(ux_stderr, "Warning: PREFERRED-TARGETS was declared with no elements on line %u.\n", result->lines);
	}
	return YYCURSOR;
}

KEYWORDS GPRE2C::scan(YYCTYPE *input) {
	KEYWORDS retval = K_IGNORE;
	YYCTYPE *YYMARKER = 0;
	YYMARKER = YYMARKER; // Just to foil the warning. Compiler will optimize this away.
	marker = YYCURSOR;
	
scan_start:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if(yych <= 'O') {
		if(yych <= ':') {
			if(yych <= 0x000D) {
				if(yych <= 0x0009) {
					if(yych <= 0x0000) goto yy252;
					if(yych <= 0x0008) goto yy273;
					goto yy256;
				} else {
					if(yych == 0x000B) goto yy256;
					if(yych <= 0x000C) goto yy254;
					goto yy256;
				}
			} else {
				if(yych <= '"') {
					if(yych <= 0x001B) goto yy273;
					if(yych <= ' ') goto yy256;
					goto yy273;
				} else {
					if(yych <= '#') goto yy271;
					if(yych <= '\'') goto yy273;
					if(yych <= ')') goto yy275;
					goto yy273;
				}
			}
		} else {
			if(yych <= 'E') {
				if(yych <= 'A') {
					if(yych <= ';') goto yy275;
					if(yych <= '@') goto yy273;
					goto yy262;
				} else {
					if(yych <= 'B') goto yy260;
					if(yych <= 'C') goto yy265;
					if(yych <= 'D') goto yy266;
					goto yy267;
				}
			} else {
				if(yych <= 'J') {
					if(yych <= 'H') goto yy273;
					if(yych <= 'I') goto yy270;
					goto yy268;
				} else {
					if(yych <= 'K') goto yy273;
					if(yych <= 'L') goto yy269;
					if(yych <= 'M') goto yy263;
					goto yy273;
				}
			}
		}
	} else {
		if(yych <= 'i') {
			if(yych <= '`') {
				if(yych <= 'R') {
					if(yych <= 'P') goto yy258;
					if(yych <= 'Q') goto yy273;
					goto yy264;
				} else {
					if(yych <= 'S') goto yy261;
					if(yych == '\\') goto yy274;
					goto yy273;
				}
			} else {
				if(yych <= 'c') {
					if(yych <= 'a') goto yy262;
					if(yych <= 'b') goto yy260;
					goto yy265;
				} else {
					if(yych <= 'd') goto yy266;
					if(yych <= 'e') goto yy267;
					if(yych <= 'h') goto yy273;
					goto yy270;
				}
			}
		} else {
			if(yych <= 'q') {
				if(yych <= 'l') {
					if(yych <= 'j') goto yy268;
					if(yych <= 'k') goto yy273;
					goto yy269;
				} else {
					if(yych <= 'm') goto yy263;
					if(yych == 'p') goto yy258;
					goto yy273;
				}
			} else {
				if(yych <= 0x0084) {
					if(yych <= 'r') goto yy264;
					if(yych <= 's') goto yy261;
					goto yy273;
				} else {
					if(yych <= 0x0085) goto yy254;
					if(yych <= 0x2027) goto yy273;
					if(yych <= 0x2029) goto yy254;
					goto yy273;
				}
			}
		}
	}
yy252:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy253;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy253;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy253;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy253:
	{retval = K_IGNORE; goto scan_end;}
yy254:
	++YYCURSOR;
	{marker = YYCURSOR; result->lines++; goto scan_start;}
yy256:
	++YYCURSOR;
	{goto scan_start;}
yy258:
	++YYCURSOR;
	if((yych = *YYCURSOR) == 'R') goto yy475;
	if(yych == 'r') goto yy475;
	goto yy278;
yy259:
	{last_entity = YYCURSOR; goto scan_start;}
yy260:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy460;
	if(yych == 'e') goto yy460;
	goto yy278;
yy261:
	yych = *++YYCURSOR;
	if(yych <= 'U') {
		if(yych <= 'N') {
			if(yych == 'E') goto yy410;
			goto yy278;
		} else {
			if(yych <= 'O') goto yy411;
			if(yych <= 'T') goto yy278;
			goto yy412;
		}
	} else {
		if(yych <= 'n') {
			if(yych == 'e') goto yy410;
			goto yy278;
		} else {
			if(yych <= 'o') goto yy411;
			if(yych == 'u') goto yy412;
			goto yy278;
		}
	}
yy262:
	yych = *++YYCURSOR;
	switch(yych) {
	case 'B':
	case 'b':	goto yy376;
	case 'D':
	case 'd':	goto yy377;
	case 'F':
	case 'f':	goto yy378;
	case 'N':
	case 'n':	goto yy379;
	case 'P':
	case 'p':	goto yy380;
	default:	goto yy278;
	}
yy263:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy355;
	if(yych == 'a') goto yy355;
	goto yy278;
yy264:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy334;
	if(yych == 'e') goto yy334;
	goto yy278;
yy265:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy313;
	if(yych == 'o') goto yy313;
	goto yy278;
yy266:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy302;
	if(yych == 'e') goto yy302;
	goto yy278;
yy267:
	yych = *++YYCURSOR;
	if(yych <= 'X') {
		if(yych == 'N') goto yy292;
		if(yych <= 'W') goto yy278;
		goto yy293;
	} else {
		if(yych <= 'n') {
			if(yych <= 'm') goto yy278;
			goto yy292;
		} else {
			if(yych == 'x') goto yy293;
			goto yy278;
		}
	}
yy268:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy288;
	if(yych == 'u') goto yy288;
	goto yy278;
yy269:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy284;
	if(yych == 'i') goto yy284;
	goto yy278;
yy270:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy281;
	if(yych == 'f') goto yy281;
	goto yy278;
yy271:
	++YYCURSOR;
	{YYCURSOR = skipline(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy273:
	yych = *++YYCURSOR;
	goto yy278;
yy274:
	yych = *++YYCURSOR;
	if(yych <= '\'') {
		if(yych == '#') goto yy277;
		goto yy278;
	} else {
		if(yych <= ')') goto yy277;
		if(yych == ';') goto yy277;
		goto yy278;
	}
yy275:
	++YYCURSOR;
	{u_fprintf(ux_stderr, "Error: Unexpected input on line %u!\n", result->lines); goto scan_end;}
yy277:
	++YYCURSOR;
	yych = *YYCURSOR;
yy278:
	if(yych <= ')') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy277;
			if(yych <= 0x000D) goto yy259;
			if(yych <= 0x001B) goto yy277;
			goto yy259;
		} else {
			if(yych == '#') goto yy259;
			if(yych <= '\'') goto yy277;
			goto yy259;
		}
	} else {
		if(yych <= '\\') {
			if(yych == ';') goto yy259;
			if(yych <= '[') goto yy277;
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy277;
				goto yy259;
			} else {
				if(yych <= 0x2027) goto yy277;
				if(yych <= 0x2029) goto yy259;
				goto yy277;
			}
		}
	}
yy279:
	++YYCURSOR;
	yych = *YYCURSOR;
	if(yych <= '[') {
		if(yych <= 0x000D) {
			if(yych <= 0x0008) goto yy277;
			goto yy259;
		} else {
			if(yych <= 0x001B) goto yy277;
			if(yych <= ' ') goto yy259;
			goto yy277;
		}
	} else {
		if(yych <= 0x0085) {
			if(yych <= '\\') goto yy279;
			if(yych <= 0x0084) goto yy277;
			goto yy259;
		} else {
			if(yych <= 0x2027) goto yy277;
			if(yych <= 0x2029) goto yy259;
			goto yy277;
		}
	}
yy281:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy282;
	if(yych != 'f') goto yy278;
yy282:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy283;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy283;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy283;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy283:
	{goto scan_start;}
yy284:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy285;
	if(yych != 's') goto yy278;
yy285:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy286;
	if(yych != 't') goto yy278;
yy286:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy287;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy287;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy287;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy287:
	{YYCURSOR = parseList(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy288:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy289;
	if(yych != 'm') goto yy278;
yy289:
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy290;
	if(yych != 'p') goto yy278;
yy290:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy291;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy291;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy291;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy291:
	{goto scan_start;}
yy292:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy300;
	if(yych == 'd') goto yy300;
	goto yy278;
yy293:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy294;
	if(yych != 'e') goto yy278;
yy294:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy295;
	if(yych != 'c') goto yy278;
yy295:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy296;
	if(yych != 'u') goto yy278;
yy296:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy297;
	if(yych != 't') goto yy278;
yy297:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy298;
	if(yych != 'e') goto yy278;
yy298:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy299;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy299;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy299;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy299:
	{goto scan_start;}
yy300:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy301;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy301;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy301;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy301:
	{retval = K_IGNORE; goto scan_end;}
yy302:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy303;
	if(yych != 'l') goto yy278;
yy303:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy304;
	if(yych != 'i') goto yy278;
yy304:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy305;
	if(yych != 'm') goto yy278;
yy305:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy306;
	if(yych != 'i') goto yy278;
yy306:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy307;
	if(yych != 't') goto yy278;
yy307:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ':') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy278;
			if(yych <= 0x000D) goto yy308;
			if(yych <= 0x001B) goto yy278;
		} else {
			if(yych <= '#') {
				if(yych <= '"') goto yy278;
			} else {
				if(yych <= '\'') goto yy278;
				if(yych >= '*') goto yy278;
			}
		}
	} else {
		if(yych <= 'e') {
			if(yych <= 'D') {
				if(yych >= '<') goto yy278;
			} else {
				if(yych <= 'E') goto yy309;
				if(yych <= 'd') goto yy278;
				goto yy309;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy278;
			} else {
				if(yych <= 0x2027) goto yy278;
				if(yych >= 0x202A) goto yy278;
			}
		}
	}
yy308:
	{goto scan_start;}
yy309:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy310;
	if(yych != 'r') goto yy278;
yy310:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy311;
	if(yych != 's') goto yy278;
yy311:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy312;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy312;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy312;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy312:
	{YYCURSOR = parseDelimiters(YYCURSOR, S_DELIMITSET); marker = YYCURSOR; goto scan_start;}
yy313:
	yych = *++YYCURSOR;
	if(yych <= 'R') {
		if(yych == 'N') goto yy315;
		if(yych <= 'Q') goto yy278;
	} else {
		if(yych <= 'n') {
			if(yych <= 'm') goto yy278;
			goto yy315;
		} else {
			if(yych != 'r') goto yy278;
		}
	}
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy325;
	if(yych == 'r') goto yy325;
	goto yy278;
yy315:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy316;
	if(yych != 's') goto yy278;
yy316:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy317;
	if(yych != 't') goto yy278;
yy317:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy318;
	if(yych != 'r') goto yy278;
yy318:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy319;
	if(yych != 'a') goto yy278;
yy319:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy320;
	if(yych != 'i') goto yy278;
yy320:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy321;
	if(yych != 'n') goto yy278;
yy321:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy322;
	if(yych != 't') goto yy278;
yy322:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy323;
	if(yych != 's') goto yy278;
yy323:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy324;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy324;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy324;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy324:
	{in_section = true; in_before_sections = in_after_sections = false; goto scan_start;}
yy325:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy326;
	if(yych != 'e') goto yy278;
yy326:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy327;
	if(yych != 'c') goto yy278;
yy327:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy328;
	if(yych != 't') goto yy278;
yy328:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy329;
	if(yych != 'i') goto yy278;
yy329:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy330;
	if(yych != 'o') goto yy278;
yy330:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy331;
	if(yych != 'n') goto yy278;
yy331:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy332;
	if(yych != 's') goto yy278;
yy332:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy333;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy333;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy333;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy333:
	{in_before_sections = true; in_section = in_after_sections = false; goto scan_start;}
yy334:
	yych = *++YYCURSOR;
	if(yych <= 'P') {
		if(yych == 'M') goto yy335;
		if(yych <= 'O') goto yy278;
		goto yy336;
	} else {
		if(yych <= 'm') {
			if(yych <= 'l') goto yy278;
		} else {
			if(yych == 'p') goto yy336;
			goto yy278;
		}
	}
yy335:
	yych = *++YYCURSOR;
	if(yych <= 'V') {
		if(yych == 'O') goto yy342;
		if(yych <= 'U') goto yy278;
		goto yy343;
	} else {
		if(yych <= 'o') {
			if(yych <= 'n') goto yy278;
			goto yy342;
		} else {
			if(yych == 'v') goto yy343;
			goto yy278;
		}
	}
yy336:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy337;
	if(yych != 'l') goto yy278;
yy337:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy338;
	if(yych != 'a') goto yy278;
yy338:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy339;
	if(yych != 'c') goto yy278;
yy339:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy340;
	if(yych != 'e') goto yy278;
yy340:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy341;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy341;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy341;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy341:
	{goto scan_start;}
yy342:
	yych = *++YYCURSOR;
	if(yych == 'V') goto yy352;
	if(yych == 'v') goto yy352;
	goto yy278;
yy343:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy344;
	if(yych != 'a') goto yy278;
yy344:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy345;
	if(yych != 'r') goto yy278;
yy345:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy346;
	if(yych != 'i') goto yy278;
yy346:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy347;
	if(yych != 'a') goto yy278;
yy347:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy348;
	if(yych != 'b') goto yy278;
yy348:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy349;
	if(yych != 'l') goto yy278;
yy349:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy350;
	if(yych != 'e') goto yy278;
yy350:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy351;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy351;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy351;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy351:
	{goto scan_start;}
yy352:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy353;
	if(yych != 'e') goto yy278;
yy353:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy354;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy354;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy354;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy354:
	{goto scan_start;}
yy355:
	yych = *++YYCURSOR;
	if(yych <= 'T') {
		if(yych == 'P') goto yy356;
		if(yych <= 'S') goto yy278;
		goto yy358;
	} else {
		if(yych <= 'p') {
			if(yych <= 'o') goto yy278;
		} else {
			if(yych == 't') goto yy358;
			goto yy278;
		}
	}
yy356:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= ':') {
		if(yych <= ' ') {
			if(yych <= 0x0008) goto yy278;
			if(yych <= 0x000D) goto yy357;
			if(yych <= 0x001B) goto yy278;
		} else {
			if(yych <= '#') {
				if(yych <= '"') goto yy278;
			} else {
				if(yych <= '\'') goto yy278;
				if(yych >= '*') goto yy278;
			}
		}
	} else {
		if(yych <= 'p') {
			if(yych <= 'O') {
				if(yych >= '<') goto yy278;
			} else {
				if(yych <= 'P') goto yy362;
				if(yych <= 'o') goto yy278;
				goto yy362;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= 0x0084) goto yy278;
			} else {
				if(yych <= 0x2027) goto yy278;
				if(yych >= 0x202A) goto yy278;
			}
		}
	}
yy357:
	{YYCURSOR = parseMapAddReplaceAppend(YYCURSOR, K_MAP); marker = YYCURSOR; goto scan_start;}
yy358:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy359;
	if(yych != 'c') goto yy278;
yy359:
	yych = *++YYCURSOR;
	if(yych == 'H') goto yy360;
	if(yych != 'h') goto yy278;
yy360:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy361;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy361;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy361;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy361:
	{goto scan_start;}
yy362:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy363;
	if(yych != 'i') goto yy278;
yy363:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy364;
	if(yych != 'n') goto yy278;
yy364:
	yych = *++YYCURSOR;
	if(yych == 'G') goto yy365;
	if(yych != 'g') goto yy278;
yy365:
	yych = *++YYCURSOR;
	if(yych <= 'R') {
		if(yych != '-') goto yy278;
	} else {
		if(yych <= 'S') goto yy367;
		if(yych == 's') goto yy367;
		goto yy278;
	}
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy369;
	if(yych == 'p') goto yy369;
	goto yy278;
yy367:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy368;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy368;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy368;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy368:
	{in_before_sections = true; in_section = in_after_sections = false; goto scan_start;}
yy369:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy370;
	if(yych != 'r') goto yy278;
yy370:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy371;
	if(yych != 'e') goto yy278;
yy371:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy372;
	if(yych != 'f') goto yy278;
yy372:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy373;
	if(yych != 'i') goto yy278;
yy373:
	yych = *++YYCURSOR;
	if(yych == 'X') goto yy374;
	if(yych != 'x') goto yy278;
yy374:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy375;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy375;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy375;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy375:
	{YYCURSOR = parseMappingPrefix(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy376:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy406;
	if(yych == 'o') goto yy406;
	goto yy278;
yy377:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy404;
	if(yych == 'd') goto yy404;
	goto yy278;
yy378:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy391;
	if(yych == 't') goto yy391;
	goto yy278;
yy379:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy386;
	if(yych == 'c') goto yy386;
	goto yy278;
yy380:
	yych = *++YYCURSOR;
	if(yych == 'P') goto yy381;
	if(yych != 'p') goto yy278;
yy381:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy382;
	if(yych != 'e') goto yy278;
yy382:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy383;
	if(yych != 'n') goto yy278;
yy383:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy384;
	if(yych != 'd') goto yy278;
yy384:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy385;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy385;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy385;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy385:
	{goto scan_start;}
yy386:
	yych = *++YYCURSOR;
	if(yych == 'H') goto yy387;
	if(yych != 'h') goto yy278;
yy387:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy388;
	if(yych != 'o') goto yy278;
yy388:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy389;
	if(yych != 'r') goto yy278;
yy389:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy390;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy390;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy390;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy390:
	{goto scan_start;}
yy391:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy392;
	if(yych != 'e') goto yy278;
yy392:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy393;
	if(yych != 'r') goto yy278;
yy393:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy278;
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy395;
	if(yych != 's') goto yy278;
yy395:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy396;
	if(yych != 'e') goto yy278;
yy396:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy397;
	if(yych != 'c') goto yy278;
yy397:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy398;
	if(yych != 't') goto yy278;
yy398:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy399;
	if(yych != 'i') goto yy278;
yy399:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy400;
	if(yych != 'o') goto yy278;
yy400:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy401;
	if(yych != 'n') goto yy278;
yy401:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy402;
	if(yych != 's') goto yy278;
yy402:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy403;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy403;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy403;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy403:
	{in_after_sections = true; in_section = in_before_sections = false; goto scan_start;}
yy404:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy405;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy405;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy405;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy405:
	{goto scan_start;}
yy406:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy407;
	if(yych != 'r') goto yy278;
yy407:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy408;
	if(yych != 't') goto yy278;
yy408:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy409;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy409;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy409;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy409:
	{goto scan_start;}
yy410:
	yych = *++YYCURSOR;
	if(yych <= 'T') {
		if(yych <= 'K') {
			if(yych == 'C') goto yy438;
			goto yy278;
		} else {
			if(yych <= 'L') goto yy439;
			if(yych <= 'S') goto yy278;
			goto yy436;
		}
	} else {
		if(yych <= 'k') {
			if(yych == 'c') goto yy438;
			goto yy278;
		} else {
			if(yych <= 'l') goto yy439;
			if(yych == 't') goto yy436;
			goto yy278;
		}
	}
yy411:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy422;
	if(yych == 'f') goto yy422;
	goto yy278;
yy412:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy413;
	if(yych != 'b') goto yy278;
yy413:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy414;
	if(yych != 's') goto yy278;
yy414:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy415;
	if(yych != 't') goto yy278;
yy415:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy416;
	if(yych != 'i') goto yy278;
yy416:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy417;
	if(yych != 't') goto yy278;
yy417:
	yych = *++YYCURSOR;
	if(yych == 'U') goto yy418;
	if(yych != 'u') goto yy278;
yy418:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy419;
	if(yych != 't') goto yy278;
yy419:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy420;
	if(yych != 'e') goto yy278;
yy420:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy421;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy421;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy421;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy421:
	{goto scan_start;}
yy422:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy423;
	if(yych != 't') goto yy278;
yy423:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy278;
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy425;
	if(yych != 'd') goto yy278;
yy425:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy426;
	if(yych != 'e') goto yy278;
yy426:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy427;
	if(yych != 'l') goto yy278;
yy427:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy428;
	if(yych != 'i') goto yy278;
yy428:
	yych = *++YYCURSOR;
	if(yych == 'M') goto yy429;
	if(yych != 'm') goto yy278;
yy429:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy430;
	if(yych != 'i') goto yy278;
yy430:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy431;
	if(yych != 't') goto yy278;
yy431:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy432;
	if(yych != 'e') goto yy278;
yy432:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy433;
	if(yych != 'r') goto yy278;
yy433:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy434;
	if(yych != 's') goto yy278;
yy434:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy435;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy435;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy435;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy435:
	{YYCURSOR = parseDelimiters(YYCURSOR, S_SOFTDELIMITSET); marker = YYCURSOR; goto scan_start;}
yy436:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 'R') {
		if(yych <= '"') {
			if(yych <= 0x000D) {
				if(yych <= 0x0008) goto yy278;
			} else {
				if(yych <= 0x001B) goto yy278;
				if(yych >= '!') goto yy278;
			}
		} else {
			if(yych <= ')') {
				if(yych <= '#') goto yy437;
				if(yych <= '\'') goto yy278;
			} else {
				if(yych != ';') goto yy278;
			}
		}
	} else {
		if(yych <= 'u') {
			if(yych <= 'V') {
				if(yych <= 'S') goto yy449;
				if(yych <= 'U') goto yy278;
				goto yy451;
			} else {
				if(yych == 's') goto yy449;
				goto yy278;
			}
		} else {
			if(yych <= 0x0085) {
				if(yych <= 'v') goto yy451;
				if(yych <= 0x0084) goto yy278;
			} else {
				if(yych <= 0x2027) goto yy278;
				if(yych >= 0x202A) goto yy278;
			}
		}
	}
yy437:
	{YYCURSOR = parseSet(YYCURSOR); marker = YYCURSOR; goto scan_start;}
yy438:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy444;
	if(yych == 't') goto yy444;
	goto yy278;
yy439:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy440;
	if(yych != 'e') goto yy278;
yy440:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy441;
	if(yych != 'c') goto yy278;
yy441:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy442;
	if(yych != 't') goto yy278;
yy442:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy443;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy443;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy443;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy443:
	{goto scan_start;}
yy444:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy445;
	if(yych != 'i') goto yy278;
yy445:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy446;
	if(yych != 'o') goto yy278;
yy446:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy447;
	if(yych != 'n') goto yy278;
yy447:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy448;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy448;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy448;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy448:
	{in_section = true; in_before_sections = in_after_sections = false; goto scan_start;}
yy449:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy450;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy450;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy450;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy450:
	{goto scan_start;}
yy451:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy452;
	if(yych != 'a') goto yy278;
yy452:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy453;
	if(yych != 'r') goto yy278;
yy453:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy454;
	if(yych != 'i') goto yy278;
yy454:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy455;
	if(yych != 'a') goto yy278;
yy455:
	yych = *++YYCURSOR;
	if(yych == 'B') goto yy456;
	if(yych != 'b') goto yy278;
yy456:
	yych = *++YYCURSOR;
	if(yych == 'L') goto yy457;
	if(yych != 'l') goto yy278;
yy457:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy458;
	if(yych != 'e') goto yy278;
yy458:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy459;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy459;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy459;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy459:
	{goto scan_start;}
yy460:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy461;
	if(yych != 'f') goto yy278;
yy461:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy462;
	if(yych != 'o') goto yy278;
yy462:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy463;
	if(yych != 'r') goto yy278;
yy463:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy464;
	if(yych != 'e') goto yy278;
yy464:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy278;
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy466;
	if(yych != 's') goto yy278;
yy466:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy467;
	if(yych != 'e') goto yy278;
yy467:
	yych = *++YYCURSOR;
	if(yych == 'C') goto yy468;
	if(yych != 'c') goto yy278;
yy468:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy469;
	if(yych != 't') goto yy278;
yy469:
	yych = *++YYCURSOR;
	if(yych == 'I') goto yy470;
	if(yych != 'i') goto yy278;
yy470:
	yych = *++YYCURSOR;
	if(yych == 'O') goto yy471;
	if(yych != 'o') goto yy278;
yy471:
	yych = *++YYCURSOR;
	if(yych == 'N') goto yy472;
	if(yych != 'n') goto yy278;
yy472:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy473;
	if(yych != 's') goto yy278;
yy473:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy474;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy474;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy474;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy474:
	{in_before_sections = true; in_section = in_after_sections = false; goto scan_start;}
yy475:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy476;
	if(yych != 'e') goto yy278;
yy476:
	yych = *++YYCURSOR;
	if(yych == 'F') goto yy477;
	if(yych != 'f') goto yy278;
yy477:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy478;
	if(yych != 'e') goto yy278;
yy478:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy479;
	if(yych != 'r') goto yy278;
yy479:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy480;
	if(yych != 'r') goto yy278;
yy480:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy481;
	if(yych != 'e') goto yy278;
yy481:
	yych = *++YYCURSOR;
	if(yych == 'D') goto yy482;
	if(yych != 'd') goto yy278;
yy482:
	yych = *++YYCURSOR;
	if(yych != '-') goto yy278;
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy484;
	if(yych != 't') goto yy278;
yy484:
	yych = *++YYCURSOR;
	if(yych == 'A') goto yy485;
	if(yych != 'a') goto yy278;
yy485:
	yych = *++YYCURSOR;
	if(yych == 'R') goto yy486;
	if(yych != 'r') goto yy278;
yy486:
	yych = *++YYCURSOR;
	if(yych == 'G') goto yy487;
	if(yych != 'g') goto yy278;
yy487:
	yych = *++YYCURSOR;
	if(yych == 'E') goto yy488;
	if(yych != 'e') goto yy278;
yy488:
	yych = *++YYCURSOR;
	if(yych == 'T') goto yy489;
	if(yych != 't') goto yy278;
yy489:
	yych = *++YYCURSOR;
	if(yych == 'S') goto yy490;
	if(yych != 's') goto yy278;
yy490:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= '\'') {
		if(yych <= 0x001B) {
			if(yych <= 0x0008) goto yy278;
			if(yych >= 0x000E) goto yy278;
		} else {
			if(yych <= ' ') goto yy491;
			if(yych != '#') goto yy278;
		}
	} else {
		if(yych <= 0x0084) {
			if(yych <= ')') goto yy491;
			if(yych != ';') goto yy278;
		} else {
			if(yych <= 0x0085) goto yy491;
			if(yych <= 0x2027) goto yy278;
			if(yych >= 0x202A) goto yy278;
		}
	}
yy491:
	{YYCURSOR = parsePreferredTargets(YYCURSOR); marker = YYCURSOR; goto scan_start;}
}


scan_end:
	marker = 0;
	return retval;
}

GPRE2C::GPRE2C() {
	filename = 0;
	locale = 0;
	codepage = 0;
	result = 0;
	option_vislcg_compat = false;
	in_before_sections = false;
	in_after_sections = false;
	in_section = false;
	marker = 0;
	last_entity = 0;
}

GPRE2C::~GPRE2C() {
	filename = 0;
	locale = 0;
	codepage = 0;
	result = 0;
}

void GPRE2C::setResult(CG3::Grammar *res) {
	result = res;
}

void GPRE2C::setCompatible(bool f) {
	option_vislcg_compat = f;
}

void GPRE2C::addRuleToGrammar(Rule *rule) {
	if (in_section) {
		result->addRule(rule, &result->rules);
	}
	else if (in_before_sections) {
		result->addRule(rule, &result->before_sections);
	}
	else if (in_after_sections) {
		result->addRule(rule, &result->after_sections);
	}
}

int GPRE2C::grammar_from_ufile(UFILE *input) {
	u_frewind(input);
	if (u_feof(input)) {
		u_fprintf(ux_stderr, "Error: Input is null - nothing to parse!\n");
		return -1;
	}
	if (!result) {
		u_fprintf(ux_stderr, "Error: No preallocated grammar provided - cannot continue!\n");
		return -1;
	}
	
	free_keywords();
	free_regexps();
	free_strings();

	int error = init_keywords();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_keywords returned %i!\n", error);
		return error;
	}

	error = init_regexps();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_regexps returned %i!\n", error);
		return error;
	}

	error = init_strings();
	if (error) {
		u_fprintf(ux_stderr, "Error: init_strings returned %i!\n", error);
		return error;
	}

	UChar *buffer = new UChar[result->grammar_size+8];
	memset(buffer, 0, sizeof(UChar)*(result->grammar_size+8));
	u_file_read(buffer, result->grammar_size, input);
	
	UChar *offset = buffer;
	if (u_strlen(offset) > 0) {
		result->lines = 1;
		scan(offset);
	} else {
		u_fprintf(ux_stderr, "Error: Grammar file is empty - nothing to parse!\n");
		return -1;
	}
	
	delete buffer;
	free_regexps();
	free_strings();

	return 0;
}

int GPRE2C::parse_grammar_from_file(const char *fname, const char *loc, const char *cpage) {
	filename = fname;
	locale = loc;
	codepage = cpage;

	if (!result) {
		u_fprintf(ux_stderr, "Error: Cannot parse into nothing - hint: call setResult() before trying.\n");
		return -1;
	}

	struct stat _stat;
	int error = stat(filename, &_stat);

	if (error != 0) {
		u_fprintf(ux_stderr, "Error: Cannot stat %s due to error %d - bailing out!\n", filename, error);
		exit(1);
	} else {
		result->last_modified = (uint32_t)_stat.st_mtime;
		result->grammar_size = (uint32_t)_stat.st_size;
	}

	result->setName(filename);

	UFILE *grammar = u_fopen(filename, "r", locale, codepage);
	if (!grammar) {
		u_fprintf(ux_stderr, "Error: Error opening %s for reading!\n", filename);
		return -1;
	}
	
	error = grammar_from_ufile(grammar);
	if (error) {
		return error;
	}
	return 0;
}
