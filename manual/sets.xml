<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter SYSTEM "docbook-dtd-45/docbookx.dtd">

<chapter id="sets">
  <title>Sets</title>

  <para>
    Describes various magic sets.
  </para>

  <section id="set-any">
    <title>(*)</title>
    <para>
      A set containing the (*) tag becomes a magic "any" set and will always match.
      This saves having to declare a dummy set containing all imaginable tags.
      Useful for testing whether a cohort exists at a position, without needing details about it.
      Can also be used to match everything except a few tags with the set operator -.
    </para>
    <screen>
      (*-1 (*) LINK 1* SomeSet)
      SELECT (*) - NotTheseTags ;
    </screen>
  </section>

  <section id="set-delimiters">
    <title>_S_DELIMITERS_</title>
    <para>
      The magic set _S_DELIMITERS_ is created from the
      <link linkend="keyword-delimiters">DELIMITERS</link> definition.
      This saves having to declare and maintain a seperate set for matching delimiters in tests.
    </para>
    <screen>
      SET SomeSet = OtherSet OR _S_DELIMITERS_ ;
    </screen>
  </section>

  <section id="set-soft-delimiters">
    <title>_S_SOFT_DELIMITERS_</title>
    <para>
      The magic set _S_SOFT_DELIMITERS_ is created from the
      <link linkend="keyword-soft-delimiters">SOFT-DELIMITERS</link> definition.
    </para>
    <screen>
      (**1 _S_SOFT_DELIMITERS_ BARRIER BoogieSet)
    </screen>
  </section>

  <section id="set-sticky-sets">
    <title>Sticky Sets</title>
    <para>
      Each time a rule is run, the tag that first satisfied the set must be the same as all subsequent
      matches of the same set in tests.
    </para>
    <para>
      A set is marked as a sticky set by prefixing $$ to the name when used in a rule.
      You can only prefix existing sets; inline sets in the form of $$(tag tags) will not work,
      but $$Set + $$OtherSet will; that method will make 2 sticky sets, though.
    </para>
    <para>
      For example
      <screen>
        LIST ROLE = &lt;human&gt; &lt;anim&gt; &lt;inanim&gt; (&lt;bench&gt; &lt;table&gt;) ;
        SELECT $$ROLE (-1 KC) (-2C $$ROLE) ;
      </screen>
      which would logically be the same as
      <screen>
        SELECT (&lt;human&gt;) (-1 KC) (-2C (&lt;human&gt;)) ;
        SELECT (&lt;anim&gt;) (-1 KC) (-2C (&lt;anim&gt;)) ;
        SELECT (&lt;inanim&gt;) (-1 KC) (-2C (&lt;inanim&gt;)) ;
        SELECT (&lt;bench&gt; &lt;table&gt;) (-1 KC) (-2C (&lt;bench&gt; &lt;table&gt;)) ;
      </screen>
    </para>
  </section>

</chapter>
