<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter SYSTEM "docbook-dtd-45/docbookx.dtd">

<chapter id="installation">
  <title>Installation &amp; Updating</title>
  <para>
    These guidelines are primarily for Linux, although I develop on Windows
    using <ulink url="http://www.microsoft.com/express/Downloads/#2010-Visual-CPP">Microsoft Visual C++ 2010 Express</ulink>.
  </para>

  <section id="ubuntu-debian">
    <title>Ubuntu / Debian</title>
    <para>
      Steps tested on a clean install of Ubuntu 8.10, but should work on any version.
      It is assumed you have a working network connection.
    </para>
    <para>
      Launch a Terminal from Applications -&gt; Accessories, and in that do
      <screen>
        sudo apt-get install g++ libicu-dev subversion autoconf automake
        cd /tmp/
        svn export --ignore-externals --username anonymous --password anonymous http://beta.visl.sdu.dk/svn/visl/tools/vislcg3/trunk vislcg3
        cd vislcg3/
        ./autogen.sh
        make -j3
        ./test/runall.pl
        sudo make install
      </screen>
      Rest of this page can be skipped.
    </para>
  </section>

  <section id="fedora">
    <title>Fedora / Red Hat</title>
    <para>
      Steps tested on a clean install of Fedora 9, but should work on any version.
      It is assumed you have a working network connection.
    </para>
    <para>
      Launch a Terminal from Applications -&gt; Accessories, and in that do
      <screen>
        su -
        yum install gcc-c++ libicu-devel subversion autoconf automake
        cd /tmp/
        svn export --ignore-externals --username anonymous --password anonymous http://beta.visl.sdu.dk/svn/visl/tools/vislcg3/trunk vislcg3
        cd vislcg3/
        ./autogen.sh
        make -j3
        ./test/runall.pl
        make install
      </screen>
      Rest of this page can be skipped.
    </para>
  </section>

  <section id="installing_icu">
    <title>Installing ICU</title>
    <para>
      <ulink url="http://icu-project.org/">International Components for Unicode</ulink> are required to compile and run VISL CG-3.
      Only need to do this once, however it must be done unless you already have a recent
      (newer or equal to <ulink url="http://icu-project.org/">ICU</ulink> 3.6) version installed. <ulink url="http://icu-project.org/">ICU</ulink> 3.4 may also work, but is
      considerably slower. Latest info on <ulink url="http://icu-project.org/">ICU</ulink> can be found at <ulink url="http://icu-project.org/">http://icu-project.org/</ulink>.
      ICU 3.8 and 4.0 have also been tested and works.
    </para>
    <para>
      Newer distributions may have a usable version of ICU available for install via the usual yum or apt managers.
      Just make sure to get the developer package alongside the runtime libraries.
    </para>
    <para>
      If you do not have ICU from your distribution, manual install is as follows.
      These steps have been tested on all Red Hat based distributions from RH8 to Fedora 8.
      Similar steps have been tested on Ubuntu 7.10, and Mac OS X 10.3 to 10.5 both PPC and Intel.
      They may vary for your distribution.
    </para>
    <para>
      As root:
      <screen>
        # cd /tmp
        # wget -c
        &nbsp; '<ulink url="http://icu-project.org/download/">http://download.icu-project.org/files/icu4c/4.0/icu4c-4_0-src.tgz</ulink>'
        # tar -zxvf icu4c-4_0-src.tgz
        # cd icu/source/
        # ./runConfigureICU Linux
        # make
        # make install
        # echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf
        # ldconfig
      </screen>
    </para>
  </section>

  <section id="compiling_cg3">
    <title>Getting &amp; Compiling VISL CG-3</title>
    <para>
      This step requires you have <ulink url="http://subversion.tigris.org/">Subversion</ulink> installed.
      Subversion binaries are very likely available for your distribution already;
      try using <command>yum install subversion</command> or <command>apt-get install subversion</command> or whichever
      package manager your distribution uses.
    </para>
    <para>
      When there are feature complete releases of VISL CG-3 I will also be making
      proper tarballs of those.
    </para>
    <para>
      As any user in any folder where you can find it again:
      <screen>
        $ svn co --username anonymous --password anonymous
        &nbsp; <ulink url="http://anonymous:anonymous@beta.visl.sdu.dk/svn/visl/tools/vislcg3/trunk/">http://beta.visl.sdu.dk/svn/visl/tools/vislcg3/trunk</ulink> vislcg3
        $ cd vislcg3/
        $ ./autogen.sh
        $ make
        $ ./test/runall.pl
        ... and if all tests succeed ...
        $ make install
      </screen>
    </para>
  </section>

  <section id="updating_cg3">
    <title>Updating VISL CG-3</title>
    <para>
      In the same folder you chose above, as the same user:
      <screen>
        $ svn up
        $ make clean
        $ ./autogen.sh
        $ make
        $ ./test/runall.pl
        ... and if all tests succeed ...
        $ make install
      </screen>
    </para>
  </section>

  <section id="regressiontest">
    <title>Regression Testing</title>
    <para>
      After successfully compiling the binary, you can run the regression test suite
      with the command:
      <screen>
        $ ./test/runall.pl
      </screen>
    </para>
    <para>
      This will run a series of tests that should all exit with "Success Success".
      If a test on your end exits with "Fail", please tar up that tests' folder and
      send it to me alongside any ideas you may have as to why it failed.
    </para>
  </section>

  <section id="cygwin">
    <title>Cygwin</title>
    <para>
      While Cygwin can compile and run VISL CG-3 via the automake toolchain, it cannot be recommended
      as it is very slow (even when using GCC 4.3).
      Instead, compile with Microsoft Visual C++ or use the latest precompiled binary.
    </para>
  </section>
</chapter>
